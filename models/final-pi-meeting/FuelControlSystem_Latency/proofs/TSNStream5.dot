
digraph proof {
	rankdir="BT";
	node [shape=record];
	comment="{\"letMap\" : {\"let1\" : \"(= arrival_time (+ start_time latency))\", \"let2\" : \"(= latency (+ LW_Fuel_Qty_link_delay LW_Fuel_Qty_propagation_delay LW_Fuel_Qty_tas_jitter RDC_L2_link_delay RDC_L2_propagation_delay RDC_L2_tas_jitter ACS_L3_egress_delay ACS_L3_fabric_delay ACS_L3_ingress_delay ACS_L3_tas_jitter ACS_R3_egress_delay ACS_R3_fabric_delay ACS_R3_ingress_delay ACS_R3_tas_jitter ACS_R2_egress_delay ACS_R2_fabric_delay ACS_R2_ingress_delay ACS_R2_tas_jitter GPM_R2_link_delay GPM_R2_propagation_delay GPM_R2_tas_jitter))\", \"let3\" : \"(= GPM_R2_tas_jitter 200)\", \"let4\" : \"(= GPM_R2_propagation_delay 10)\", \"let5\" : \"(= GPM_R2_link_delay 8)\", \"let6\" : \"(= ACS_R2_tas_jitter 100)\", \"let7\" : \"(= ACS_R2_ingress_delay 9)\", \"let8\" : \"(= ACS_R2_fabric_delay 1008)\", \"let9\" : \"(= ACS_R2_egress_delay 9)\", \"let10\" : \"(= ACS_R3_tas_jitter 100)\", \"let11\" : \"(= ACS_R3_ingress_delay 9)\", \"let12\" : \"(= ACS_R3_fabric_delay 1008)\", \"let13\" : \"(= ACS_R3_egress_delay 9)\", \"let14\" : \"(= ACS_L3_tas_jitter 100)\", \"let15\" : \"(= ACS_L3_ingress_delay 9)\", \"let16\" : \"(= ACS_L3_fabric_delay 1008)\", \"let17\" : \"(= ACS_L3_egress_delay 9)\", \"let18\" : \"(= RDC_L2_tas_jitter 200)\", \"let19\" : \"(= RDC_L2_propagation_delay 10)\", \"let20\" : \"(= RDC_L2_link_delay 8)\", \"let21\" : \"(= LW_Fuel_Qty_tas_jitter 200)\", \"let22\" : \"(= LW_Fuel_Qty_propagation_delay 10)\", \"let23\" : \"(= LW_Fuel_Qty_link_delay 8)\", \"let24\" : \"(\>= arrival_time (+ arrival_limit threshold))\", \"let25\" : \"(= arrival_limit 7000000)\", \"let26\" : \"(= threshold 200)\", \"let27\" : \"(= start_time 6500000)\", \"let28\" : \"(\>= start_time 6500001)\", \"let29\" : \"(not let28)\", \"let30\" : \"(and let29 (\>= start_time 6500000))\", \"let31\" : \"(\>= threshold 200)\", \"let32\" : \"(and (not (\>= threshold 201)) let31)\", \"let33\" : \"(\>= arrival_limit 7000000)\", \"let34\" : \"(and (not (\>= arrival_limit 7000001)) let33)\", \"let35\" : \"(* (- 1) arrival_time)\", \"let36\" : \"(+ threshold let35 arrival_limit)\", \"let37\" : \"(\>= let36 1)\", \"let38\" : \"(not let37)\", \"let39\" : \"(\>= LW_Fuel_Qty_link_delay 9)\", \"let40\" : \"(not let39)\", \"let41\" : \"(and let40 (\>= LW_Fuel_Qty_link_delay 8))\", \"let42\" : \"(\>= LW_Fuel_Qty_propagation_delay 11)\", \"let43\" : \"(not let42)\", \"let44\" : \"(and let43 (\>= LW_Fuel_Qty_propagation_delay 10))\", \"let45\" : \"(\>= LW_Fuel_Qty_tas_jitter 201)\", \"let46\" : \"(not let45)\", \"let47\" : \"(and let46 (\>= LW_Fuel_Qty_tas_jitter 200))\", \"let48\" : \"(\>= RDC_L2_link_delay 9)\", \"let49\" : \"(not let48)\", \"let50\" : \"(and let49 (\>= RDC_L2_link_delay 8))\", \"let51\" : \"(\>= RDC_L2_propagation_delay 11)\", \"let52\" : \"(not let51)\", \"let53\" : \"(and let52 (\>= RDC_L2_propagation_delay 10))\", \"let54\" : \"(\>= RDC_L2_tas_jitter 201)\", \"let55\" : \"(not let54)\", \"let56\" : \"(and let55 (\>= RDC_L2_tas_jitter 200))\", \"let57\" : \"(\>= ACS_L3_egress_delay 10)\", \"let58\" : \"(not let57)\", \"let59\" : \"(and let58 (\>= ACS_L3_egress_delay 9))\", \"let60\" : \"(\>= ACS_L3_fabric_delay 1009)\", \"let61\" : \"(not let60)\", \"let62\" : \"(and let61 (\>= ACS_L3_fabric_delay 1008))\", \"let63\" : \"(\>= ACS_L3_ingress_delay 10)\", \"let64\" : \"(not let63)\", \"let65\" : \"(and let64 (\>= ACS_L3_ingress_delay 9))\", \"let66\" : \"(\>= ACS_L3_tas_jitter 101)\", \"let67\" : \"(not let66)\", \"let68\" : \"(and let67 (\>= ACS_L3_tas_jitter 100))\", \"let69\" : \"(\>= ACS_R3_egress_delay 10)\", \"let70\" : \"(not let69)\", \"let71\" : \"(and let70 (\>= ACS_R3_egress_delay 9))\", \"let72\" : \"(\>= ACS_R3_fabric_delay 1009)\", \"let73\" : \"(not let72)\", \"let74\" : \"(and let73 (\>= ACS_R3_fabric_delay 1008))\", \"let75\" : \"(\>= ACS_R3_ingress_delay 10)\", \"let76\" : \"(not let75)\", \"let77\" : \"(and let76 (\>= ACS_R3_ingress_delay 9))\", \"let78\" : \"(\>= ACS_R3_tas_jitter 101)\", \"let79\" : \"(not let78)\", \"let80\" : \"(and let79 (\>= ACS_R3_tas_jitter 100))\", \"let81\" : \"(\>= ACS_R2_egress_delay 10)\", \"let82\" : \"(not let81)\", \"let83\" : \"(and let82 (\>= ACS_R2_egress_delay 9))\", \"let84\" : \"(\>= ACS_R2_fabric_delay 1009)\", \"let85\" : \"(not let84)\", \"let86\" : \"(and let85 (\>= ACS_R2_fabric_delay 1008))\", \"let87\" : \"(\>= ACS_R2_ingress_delay 10)\", \"let88\" : \"(not let87)\", \"let89\" : \"(and let88 (\>= ACS_R2_ingress_delay 9))\", \"let90\" : \"(\>= ACS_R2_tas_jitter 101)\", \"let91\" : \"(not let90)\", \"let92\" : \"(and let91 (\>= ACS_R2_tas_jitter 100))\", \"let93\" : \"(\>= GPM_R2_link_delay 9)\", \"let94\" : \"(not let93)\", \"let95\" : \"(and let94 (\>= GPM_R2_link_delay 8))\", \"let96\" : \"(\>= GPM_R2_propagation_delay 11)\", \"let97\" : \"(not let96)\", \"let98\" : \"(and let97 (\>= GPM_R2_propagation_delay 10))\", \"let99\" : \"(\>= GPM_R2_tas_jitter 201)\", \"let100\" : \"(not let99)\", \"let101\" : \"(and let100 (\>= GPM_R2_tas_jitter 200))\", \"let102\" : \"(+ latency (* (- 1) LW_Fuel_Qty_link_delay) (* (- 1) LW_Fuel_Qty_propagation_delay) (* (- 1) LW_Fuel_Qty_tas_jitter) (* (- 1) RDC_L2_link_delay) (* (- 1) RDC_L2_propagation_delay) (* (- 1) RDC_L2_tas_jitter) (* (- 1) ACS_L3_egress_delay) (* (- 1) ACS_L3_fabric_delay) (* (- 1) ACS_L3_ingress_delay) (* (- 1) ACS_L3_tas_jitter) (* (- 1) ACS_R3_egress_delay) (* (- 1) ACS_R3_fabric_delay) (* (- 1) ACS_R3_ingress_delay) (* (- 1) ACS_R3_tas_jitter) (* (- 1) ACS_R2_egress_delay) (* (- 1) ACS_R2_fabric_delay) (* (- 1) ACS_R2_ingress_delay) (* (- 1) ACS_R2_tas_jitter) (* (- 1) GPM_R2_link_delay) (* (- 1) GPM_R2_propagation_delay) (* (- 1) GPM_R2_tas_jitter))\", \"let103\" : \"(\>= let102 1)\", \"let104\" : \"(not let103)\", \"let105\" : \"(and let104 (\>= let102 0))\", \"let106\" : \"(+ latency start_time let35)\", \"let107\" : \"(\>= let106 0)\", \"let108\" : \"(and (not (\>= let106 1)) let107)\", \"let109\" : \"(= latency (+ (* (- 1) start_time) arrival_time))\", \"let110\" : \"(not let107)\", \"let111\" : \"(not let33)\", \"let112\" : \"(not let31)\", \"let113\" : \"(or let112 let111 let28 let39 let42 let45 let48 let51 let54 let57 let60 let63 let66 let69 let72 let75 let78 let81 let84 let87 let90 let93 let96 let99 let103 let110 let37)\", \"let114\" : \"(not let38)\", \"let115\" : \"(not let104)\", \"let116\" : \"(not let100)\", \"let117\" : \"(not let97)\", \"let118\" : \"(not let94)\", \"let119\" : \"(not let91)\", \"let120\" : \"(not let88)\", \"let121\" : \"(not let85)\", \"let122\" : \"(not let82)\", \"let123\" : \"(not let79)\", \"let124\" : \"(not let76)\", \"let125\" : \"(not let73)\", \"let126\" : \"(not let70)\", \"let127\" : \"(not let67)\", \"let128\" : \"(not let64)\", \"let129\" : \"(not let61)\", \"let130\" : \"(not let58)\", \"let131\" : \"(not let55)\", \"let132\" : \"(not let52)\", \"let133\" : \"(not let49)\", \"let134\" : \"(not let46)\", \"let135\" : \"(not let43)\", \"let136\" : \"(not let40)\", \"let137\" : \"(not let29)\", \"let138\" : \"(or let112 let111 let137 let136 let135 let134 let133 let132 let131 let130 let129 let128 let127 let126 let125 let124 let123 let122 let121 let120 let119 let118 let117 let116 let115 let110 let114)\", \"let139\" : \"(\< let36 1)\", \"let140\" : \"(not let139)\", \"let141\" : \"(* 1.0 9)\", \"let142\" : \"(* 1.0 11)\", \"let143\" : \"(* 1.0 201)\", \"let144\" : \"(* 1.0 10)\", \"let145\" : \"(* 1.0 1009)\", \"let146\" : \"(* 1.0 101)\", \"let147\" : \"(* 1.0 1)\"}}";
	0 [ label = "{(not (and let27 let26 let25 let24 let23 let22 let21 let20 let19 let18 let17 let16 let15 let14 let13 let12 let11 let10 let9 let8 let7 let6 let5 let4 let3 let2 let1))|SCOPE :args [ let27, let26, let25, let24, let23, let22, let21, let20, let19, let18, let17, let16, let15, let14, let13, let12, let11, let10, let9, let8, let7, let6, let5, let4, let3, let2, let1 ]}", comment = "{\"subProofQty\":203}" ];
	1 [ label = "{false|MACRO_RESOLUTION_TRUST :args [ false, false, let107, true, let103, true, let99, true, let96, true, let93, true, let90, true, let87, true, let84, true, let81, true, let78, true, let75, true, let72, true, let69, true, let66, true, let63, true, let60, true, let57, true, let54, true, let51, true, let48, true, let45, true, let42, true, let39, true, let37, false, let33, false, let31, true, let28 ]}", comment = "{\"subProofQty\":202}" ];
	2 [ label = "{(or let37 let28 let39 let42 let45 let48 let51 let54 let57 let60 let63 let66 let69 let72 let75 let78 let81 let84 let87 let90 let93 let96 let99 let103 let112 let111 let110)|REORDERING}", comment = "{\"subProofQty\":92}" ];
	3 [ label = "{let113|EQ_RESOLVE}", comment = "{\"subProofQty\":91}" ];
	4 [ label = "{let138|NOT_AND}", comment = "{\"subProofQty\":62}" ];
	5 [ label = "{(not (and let31 let33 let29 let40 let43 let46 let49 let52 let55 let58 let61 let64 let67 let70 let73 let76 let79 let82 let85 let88 let91 let94 let97 let100 let104 let107 let38))|SCOPE :args [ let31, let33, let29, let40, let43, let46, let49, let52, let55, let58, let61, let64, let67, let70, let73, let76, let79, let82, let85, let88, let91, let94, let97, let100, let104, let107, let38 ]}", comment = "{\"subProofQty\":61}" ];
	6 [ label = "{false|CONTRA}", comment = "{\"subProofQty\":60}" ];
	7 [ label = "{let139|MACRO_SR_PRED_TRANSFORM :args [ let139 ]}", comment = "{\"subProofQty\":4}" ];
	8 [ label = "{let38|EQ_RESOLVE}", comment = "{\"subProofQty\":3}" ];
	9 [ label = "{let24|ASSUME}", comment = "{\"subProofQty\":1}" ];
	9 -> 8;
	10 [ label = "{(= let24 let38)|MACRO_SR_EQ_INTRO :args [ let24, 7, 12 ]}", comment = "{\"subProofQty\":1}" ];
	10 -> 8;
	8 -> 7;
	7 -> 6;
	11 [ label = "{let140|MACRO_SR_PRED_TRANSFORM :args [ let140 ]}", comment = "{\"subProofQty\":55}" ];
	12 [ label = "{let37|MACRO_SR_PRED_TRANSFORM :args [ let37 ]}", comment = "{\"subProofQty\":54}" ];
	13 [ label = "{let140|SCOPE :args [ let139 ]}", comment = "{\"subProofQty\":53}" ];
	14 [ label = "{false|MACRO_SR_PRED_TRANSFORM :args [ false ]}", comment = "{\"subProofQty\":52}" ];
	15 [ label = "{(\< (+ (* 1.0 let36) (* (- 1.0) let106) (* 1.0 let102) (* 1.0 GPM_R2_tas_jitter) (* 1.0 GPM_R2_propagation_delay) (* 1.0 GPM_R2_link_delay) (* 1.0 ACS_R2_tas_jitter) (* 1.0 ACS_R2_ingress_delay) (* 1.0 ACS_R2_fabric_delay) (* 1.0 ACS_R2_egress_delay) (* 1.0 ACS_R3_tas_jitter) (* 1.0 ACS_R3_ingress_delay) (* 1.0 ACS_R3_fabric_delay) (* 1.0 ACS_R3_egress_delay) (* 1.0 ACS_L3_tas_jitter) (* 1.0 ACS_L3_ingress_delay) (* 1.0 ACS_L3_fabric_delay) (* 1.0 ACS_L3_egress_delay) (* 1.0 RDC_L2_tas_jitter) (* 1.0 RDC_L2_propagation_delay) (* 1.0 RDC_L2_link_delay) (* 1.0 LW_Fuel_Qty_tas_jitter) (* 1.0 LW_Fuel_Qty_propagation_delay) (* 1.0 LW_Fuel_Qty_link_delay) (* 1.0 start_time) (* (- 1.0) arrival_limit) (* (- 1.0) threshold)) (+ let147 (* (- 1.0) 0) let147 let143 let142 let141 let146 let144 let145 let144 let146 let144 let145 let144 let146 let144 let145 let144 let143 let142 let141 let143 let142 let141 (* 1.0 6500001) (* (- 1.0) 7000000) (* (- 1.0) 200)))|MACRO_ARITH_SCALE_SUM_UB :args [ 1.0, (- 1.0), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, (- 1.0), (- 1.0) ]}", comment = "{\"subProofQty\":51}" ];
	16 [ label = "{let139|ASSUME}", comment = "{\"subProofQty\":1}" ];
	16 -> 15;
	17 [ label = "{let107|ASSUME}", comment = "{\"subProofQty\":1}" ];
	17 -> 15;
	18 [ label = "{(\< let102 1)|MACRO_SR_PRED_TRANSFORM :args [ (\< let102 1) ]}", comment = "{\"subProofQty\":2}" ];
	19 [ label = "{let104|ASSUME}", comment = "{\"subProofQty\":1}" ];
	19 -> 18;
	18 -> 15;
	20 [ label = "{(\< GPM_R2_tas_jitter 201)|MACRO_SR_PRED_TRANSFORM :args [ (\< GPM_R2_tas_jitter 201) ]}", comment = "{\"subProofQty\":2}" ];
	21 [ label = "{let100|ASSUME}", comment = "{\"subProofQty\":1}" ];
	21 -> 20;
	20 -> 15;
	22 [ label = "{(\< GPM_R2_propagation_delay 11)|MACRO_SR_PRED_TRANSFORM :args [ (\< GPM_R2_propagation_delay 11) ]}", comment = "{\"subProofQty\":2}" ];
	23 [ label = "{let97|ASSUME}", comment = "{\"subProofQty\":1}" ];
	23 -> 22;
	22 -> 15;
	24 [ label = "{(\< GPM_R2_link_delay 9)|MACRO_SR_PRED_TRANSFORM :args [ (\< GPM_R2_link_delay 9) ]}", comment = "{\"subProofQty\":2}" ];
	25 [ label = "{let94|ASSUME}", comment = "{\"subProofQty\":1}" ];
	25 -> 24;
	24 -> 15;
	26 [ label = "{(\< ACS_R2_tas_jitter 101)|MACRO_SR_PRED_TRANSFORM :args [ (\< ACS_R2_tas_jitter 101) ]}", comment = "{\"subProofQty\":2}" ];
	27 [ label = "{let91|ASSUME}", comment = "{\"subProofQty\":1}" ];
	27 -> 26;
	26 -> 15;
	28 [ label = "{(\< ACS_R2_ingress_delay 10)|MACRO_SR_PRED_TRANSFORM :args [ (\< ACS_R2_ingress_delay 10) ]}", comment = "{\"subProofQty\":2}" ];
	29 [ label = "{let88|ASSUME}", comment = "{\"subProofQty\":1}" ];
	29 -> 28;
	28 -> 15;
	30 [ label = "{(\< ACS_R2_fabric_delay 1009)|MACRO_SR_PRED_TRANSFORM :args [ (\< ACS_R2_fabric_delay 1009) ]}", comment = "{\"subProofQty\":2}" ];
	31 [ label = "{let85|ASSUME}", comment = "{\"subProofQty\":1}" ];
	31 -> 30;
	30 -> 15;
	32 [ label = "{(\< ACS_R2_egress_delay 10)|MACRO_SR_PRED_TRANSFORM :args [ (\< ACS_R2_egress_delay 10) ]}", comment = "{\"subProofQty\":2}" ];
	33 [ label = "{let82|ASSUME}", comment = "{\"subProofQty\":1}" ];
	33 -> 32;
	32 -> 15;
	34 [ label = "{(\< ACS_R3_tas_jitter 101)|MACRO_SR_PRED_TRANSFORM :args [ (\< ACS_R3_tas_jitter 101) ]}", comment = "{\"subProofQty\":2}" ];
	35 [ label = "{let79|ASSUME}", comment = "{\"subProofQty\":1}" ];
	35 -> 34;
	34 -> 15;
	36 [ label = "{(\< ACS_R3_ingress_delay 10)|MACRO_SR_PRED_TRANSFORM :args [ (\< ACS_R3_ingress_delay 10) ]}", comment = "{\"subProofQty\":2}" ];
	37 [ label = "{let76|ASSUME}", comment = "{\"subProofQty\":1}" ];
	37 -> 36;
	36 -> 15;
	38 [ label = "{(\< ACS_R3_fabric_delay 1009)|MACRO_SR_PRED_TRANSFORM :args [ (\< ACS_R3_fabric_delay 1009) ]}", comment = "{\"subProofQty\":2}" ];
	39 [ label = "{let73|ASSUME}", comment = "{\"subProofQty\":1}" ];
	39 -> 38;
	38 -> 15;
	40 [ label = "{(\< ACS_R3_egress_delay 10)|MACRO_SR_PRED_TRANSFORM :args [ (\< ACS_R3_egress_delay 10) ]}", comment = "{\"subProofQty\":2}" ];
	41 [ label = "{let70|ASSUME}", comment = "{\"subProofQty\":1}" ];
	41 -> 40;
	40 -> 15;
	42 [ label = "{(\< ACS_L3_tas_jitter 101)|MACRO_SR_PRED_TRANSFORM :args [ (\< ACS_L3_tas_jitter 101) ]}", comment = "{\"subProofQty\":2}" ];
	43 [ label = "{let67|ASSUME}", comment = "{\"subProofQty\":1}" ];
	43 -> 42;
	42 -> 15;
	44 [ label = "{(\< ACS_L3_ingress_delay 10)|MACRO_SR_PRED_TRANSFORM :args [ (\< ACS_L3_ingress_delay 10) ]}", comment = "{\"subProofQty\":2}" ];
	45 [ label = "{let64|ASSUME}", comment = "{\"subProofQty\":1}" ];
	45 -> 44;
	44 -> 15;
	46 [ label = "{(\< ACS_L3_fabric_delay 1009)|MACRO_SR_PRED_TRANSFORM :args [ (\< ACS_L3_fabric_delay 1009) ]}", comment = "{\"subProofQty\":2}" ];
	47 [ label = "{let61|ASSUME}", comment = "{\"subProofQty\":1}" ];
	47 -> 46;
	46 -> 15;
	48 [ label = "{(\< ACS_L3_egress_delay 10)|MACRO_SR_PRED_TRANSFORM :args [ (\< ACS_L3_egress_delay 10) ]}", comment = "{\"subProofQty\":2}" ];
	49 [ label = "{let58|ASSUME}", comment = "{\"subProofQty\":1}" ];
	49 -> 48;
	48 -> 15;
	50 [ label = "{(\< RDC_L2_tas_jitter 201)|MACRO_SR_PRED_TRANSFORM :args [ (\< RDC_L2_tas_jitter 201) ]}", comment = "{\"subProofQty\":2}" ];
	51 [ label = "{let55|ASSUME}", comment = "{\"subProofQty\":1}" ];
	51 -> 50;
	50 -> 15;
	52 [ label = "{(\< RDC_L2_propagation_delay 11)|MACRO_SR_PRED_TRANSFORM :args [ (\< RDC_L2_propagation_delay 11) ]}", comment = "{\"subProofQty\":2}" ];
	53 [ label = "{let52|ASSUME}", comment = "{\"subProofQty\":1}" ];
	53 -> 52;
	52 -> 15;
	54 [ label = "{(\< RDC_L2_link_delay 9)|MACRO_SR_PRED_TRANSFORM :args [ (\< RDC_L2_link_delay 9) ]}", comment = "{\"subProofQty\":2}" ];
	55 [ label = "{let49|ASSUME}", comment = "{\"subProofQty\":1}" ];
	55 -> 54;
	54 -> 15;
	56 [ label = "{(\< LW_Fuel_Qty_tas_jitter 201)|MACRO_SR_PRED_TRANSFORM :args [ (\< LW_Fuel_Qty_tas_jitter 201) ]}", comment = "{\"subProofQty\":2}" ];
	57 [ label = "{let46|ASSUME}", comment = "{\"subProofQty\":1}" ];
	57 -> 56;
	56 -> 15;
	58 [ label = "{(\< LW_Fuel_Qty_propagation_delay 11)|MACRO_SR_PRED_TRANSFORM :args [ (\< LW_Fuel_Qty_propagation_delay 11) ]}", comment = "{\"subProofQty\":2}" ];
	59 [ label = "{let43|ASSUME}", comment = "{\"subProofQty\":1}" ];
	59 -> 58;
	58 -> 15;
	60 [ label = "{(\< LW_Fuel_Qty_link_delay 9)|MACRO_SR_PRED_TRANSFORM :args [ (\< LW_Fuel_Qty_link_delay 9) ]}", comment = "{\"subProofQty\":2}" ];
	61 [ label = "{let40|ASSUME}", comment = "{\"subProofQty\":1}" ];
	61 -> 60;
	60 -> 15;
	62 [ label = "{(\< start_time 6500001)|MACRO_SR_PRED_TRANSFORM :args [ (\< start_time 6500001) ]}", comment = "{\"subProofQty\":2}" ];
	63 [ label = "{let29|ASSUME}", comment = "{\"subProofQty\":1}" ];
	63 -> 62;
	62 -> 15;
	64 [ label = "{let33|ASSUME}", comment = "{\"subProofQty\":1}" ];
	64 -> 15;
	65 [ label = "{let31|ASSUME}", comment = "{\"subProofQty\":1}" ];
	65 -> 15;
	15 -> 14;
	14 -> 13;
	13 -> 12;
	12 -> 11;
	11 -> 6;
	6 -> 5;
	5 -> 4;
	4 -> 3;
	66 [ label = "{(= let138 let113)|CONG :args [ or ]}", comment = "{\"subProofQty\":28}" ];
	67 [ label = "{(= let112 let112)|REFL}", comment = "{\"subProofQty\":1}" ];
	67 -> 66;
	68 [ label = "{(= let111 let111)|REFL}", comment = "{\"subProofQty\":1}" ];
	68 -> 66;
	69 [ label = "{(= let137 let28)|MACRO_SR_PRED_INTRO :args [ (= let137 let28) ]}", comment = "{\"subProofQty\":1}" ];
	69 -> 66;
	70 [ label = "{(= let136 let39)|MACRO_SR_PRED_INTRO :args [ (= let136 let39) ]}", comment = "{\"subProofQty\":1}" ];
	70 -> 66;
	71 [ label = "{(= let135 let42)|MACRO_SR_PRED_INTRO :args [ (= let135 let42) ]}", comment = "{\"subProofQty\":1}" ];
	71 -> 66;
	72 [ label = "{(= let134 let45)|MACRO_SR_PRED_INTRO :args [ (= let134 let45) ]}", comment = "{\"subProofQty\":1}" ];
	72 -> 66;
	73 [ label = "{(= let133 let48)|MACRO_SR_PRED_INTRO :args [ (= let133 let48) ]}", comment = "{\"subProofQty\":1}" ];
	73 -> 66;
	74 [ label = "{(= let132 let51)|MACRO_SR_PRED_INTRO :args [ (= let132 let51) ]}", comment = "{\"subProofQty\":1}" ];
	74 -> 66;
	75 [ label = "{(= let131 let54)|MACRO_SR_PRED_INTRO :args [ (= let131 let54) ]}", comment = "{\"subProofQty\":1}" ];
	75 -> 66;
	76 [ label = "{(= let130 let57)|MACRO_SR_PRED_INTRO :args [ (= let130 let57) ]}", comment = "{\"subProofQty\":1}" ];
	76 -> 66;
	77 [ label = "{(= let129 let60)|MACRO_SR_PRED_INTRO :args [ (= let129 let60) ]}", comment = "{\"subProofQty\":1}" ];
	77 -> 66;
	78 [ label = "{(= let128 let63)|MACRO_SR_PRED_INTRO :args [ (= let128 let63) ]}", comment = "{\"subProofQty\":1}" ];
	78 -> 66;
	79 [ label = "{(= let127 let66)|MACRO_SR_PRED_INTRO :args [ (= let127 let66) ]}", comment = "{\"subProofQty\":1}" ];
	79 -> 66;
	80 [ label = "{(= let126 let69)|MACRO_SR_PRED_INTRO :args [ (= let126 let69) ]}", comment = "{\"subProofQty\":1}" ];
	80 -> 66;
	81 [ label = "{(= let125 let72)|MACRO_SR_PRED_INTRO :args [ (= let125 let72) ]}", comment = "{\"subProofQty\":1}" ];
	81 -> 66;
	82 [ label = "{(= let124 let75)|MACRO_SR_PRED_INTRO :args [ (= let124 let75) ]}", comment = "{\"subProofQty\":1}" ];
	82 -> 66;
	83 [ label = "{(= let123 let78)|MACRO_SR_PRED_INTRO :args [ (= let123 let78) ]}", comment = "{\"subProofQty\":1}" ];
	83 -> 66;
	84 [ label = "{(= let122 let81)|MACRO_SR_PRED_INTRO :args [ (= let122 let81) ]}", comment = "{\"subProofQty\":1}" ];
	84 -> 66;
	85 [ label = "{(= let121 let84)|MACRO_SR_PRED_INTRO :args [ (= let121 let84) ]}", comment = "{\"subProofQty\":1}" ];
	85 -> 66;
	86 [ label = "{(= let120 let87)|MACRO_SR_PRED_INTRO :args [ (= let120 let87) ]}", comment = "{\"subProofQty\":1}" ];
	86 -> 66;
	87 [ label = "{(= let119 let90)|MACRO_SR_PRED_INTRO :args [ (= let119 let90) ]}", comment = "{\"subProofQty\":1}" ];
	87 -> 66;
	88 [ label = "{(= let118 let93)|MACRO_SR_PRED_INTRO :args [ (= let118 let93) ]}", comment = "{\"subProofQty\":1}" ];
	88 -> 66;
	89 [ label = "{(= let117 let96)|MACRO_SR_PRED_INTRO :args [ (= let117 let96) ]}", comment = "{\"subProofQty\":1}" ];
	89 -> 66;
	90 [ label = "{(= let116 let99)|MACRO_SR_PRED_INTRO :args [ (= let116 let99) ]}", comment = "{\"subProofQty\":1}" ];
	90 -> 66;
	91 [ label = "{(= let115 let103)|MACRO_SR_PRED_INTRO :args [ (= let115 let103) ]}", comment = "{\"subProofQty\":1}" ];
	91 -> 66;
	92 [ label = "{(= let110 let110)|REFL}", comment = "{\"subProofQty\":1}" ];
	92 -> 66;
	93 [ label = "{(= let114 let37)|MACRO_SR_PRED_INTRO :args [ (= let114 let37) ]}", comment = "{\"subProofQty\":1}" ];
	93 -> 66;
	66 -> 3;
	3 -> 2;
	2 -> 1;
	94 [ label = "{let107|AND_ELIM :args [ 1 ]}", comment = "{\"subProofQty\":6}" ];
	95 [ label = "{let108|EQ_RESOLVE}", comment = "{\"subProofQty\":5}" ];
	96 [ label = "{let1|ASSUME}", comment = "{\"subProofQty\":1}" ];
	96 -> 95;
	97 [ label = "{(= let1 let108)|TRANS}", comment = "{\"subProofQty\":3}" ];
	98 [ label = "{(= let1 let109)|MACRO_SR_EQ_INTRO :args [ let1, 7, 12 ]}", comment = "{\"subProofQty\":1}" ];
	98 -> 97;
	99 [ label = "{(= let109 let108)|PREPROCESS :args [ (= let109 let108) ]}", comment = "{\"subProofQty\":1}" ];
	99 -> 97;
	97 -> 95;
	95 -> 94;
	94 -> 1;
	100 [ label = "{let104|AND_ELIM :args [ 0 ]}", comment = "{\"subProofQty\":4}" ];
	101 [ label = "{let105|EQ_RESOLVE}", comment = "{\"subProofQty\":3}" ];
	102 [ label = "{let2|ASSUME}", comment = "{\"subProofQty\":1}" ];
	102 -> 101;
	103 [ label = "{(= let2 let105)|PREPROCESS :args [ (= let2 let105) ]}", comment = "{\"subProofQty\":1}" ];
	103 -> 101;
	101 -> 100;
	100 -> 1;
	104 [ label = "{let100|AND_ELIM :args [ 0 ]}", comment = "{\"subProofQty\":4}" ];
	105 [ label = "{let101|EQ_RESOLVE}", comment = "{\"subProofQty\":3}" ];
	106 [ label = "{let3|ASSUME}", comment = "{\"subProofQty\":1}" ];
	106 -> 105;
	107 [ label = "{(= let3 let101)|PREPROCESS :args [ (= let3 let101) ]}", comment = "{\"subProofQty\":1}" ];
	107 -> 105;
	105 -> 104;
	104 -> 1;
	108 [ label = "{let97|AND_ELIM :args [ 0 ]}", comment = "{\"subProofQty\":4}" ];
	109 [ label = "{let98|EQ_RESOLVE}", comment = "{\"subProofQty\":3}" ];
	110 [ label = "{let4|ASSUME}", comment = "{\"subProofQty\":1}" ];
	110 -> 109;
	111 [ label = "{(= let4 let98)|PREPROCESS :args [ (= let4 let98) ]}", comment = "{\"subProofQty\":1}" ];
	111 -> 109;
	109 -> 108;
	108 -> 1;
	112 [ label = "{let94|AND_ELIM :args [ 0 ]}", comment = "{\"subProofQty\":4}" ];
	113 [ label = "{let95|EQ_RESOLVE}", comment = "{\"subProofQty\":3}" ];
	114 [ label = "{let5|ASSUME}", comment = "{\"subProofQty\":1}" ];
	114 -> 113;
	115 [ label = "{(= let5 let95)|PREPROCESS :args [ (= let5 let95) ]}", comment = "{\"subProofQty\":1}" ];
	115 -> 113;
	113 -> 112;
	112 -> 1;
	116 [ label = "{let91|AND_ELIM :args [ 0 ]}", comment = "{\"subProofQty\":4}" ];
	117 [ label = "{let92|EQ_RESOLVE}", comment = "{\"subProofQty\":3}" ];
	118 [ label = "{let6|ASSUME}", comment = "{\"subProofQty\":1}" ];
	118 -> 117;
	119 [ label = "{(= let6 let92)|PREPROCESS :args [ (= let6 let92) ]}", comment = "{\"subProofQty\":1}" ];
	119 -> 117;
	117 -> 116;
	116 -> 1;
	120 [ label = "{let88|AND_ELIM :args [ 0 ]}", comment = "{\"subProofQty\":4}" ];
	121 [ label = "{let89|EQ_RESOLVE}", comment = "{\"subProofQty\":3}" ];
	122 [ label = "{let7|ASSUME}", comment = "{\"subProofQty\":1}" ];
	122 -> 121;
	123 [ label = "{(= let7 let89)|PREPROCESS :args [ (= let7 let89) ]}", comment = "{\"subProofQty\":1}" ];
	123 -> 121;
	121 -> 120;
	120 -> 1;
	124 [ label = "{let85|AND_ELIM :args [ 0 ]}", comment = "{\"subProofQty\":4}" ];
	125 [ label = "{let86|EQ_RESOLVE}", comment = "{\"subProofQty\":3}" ];
	126 [ label = "{let8|ASSUME}", comment = "{\"subProofQty\":1}" ];
	126 -> 125;
	127 [ label = "{(= let8 let86)|PREPROCESS :args [ (= let8 let86) ]}", comment = "{\"subProofQty\":1}" ];
	127 -> 125;
	125 -> 124;
	124 -> 1;
	128 [ label = "{let82|AND_ELIM :args [ 0 ]}", comment = "{\"subProofQty\":4}" ];
	129 [ label = "{let83|EQ_RESOLVE}", comment = "{\"subProofQty\":3}" ];
	130 [ label = "{let9|ASSUME}", comment = "{\"subProofQty\":1}" ];
	130 -> 129;
	131 [ label = "{(= let9 let83)|PREPROCESS :args [ (= let9 let83) ]}", comment = "{\"subProofQty\":1}" ];
	131 -> 129;
	129 -> 128;
	128 -> 1;
	132 [ label = "{let79|AND_ELIM :args [ 0 ]}", comment = "{\"subProofQty\":4}" ];
	133 [ label = "{let80|EQ_RESOLVE}", comment = "{\"subProofQty\":3}" ];
	134 [ label = "{let10|ASSUME}", comment = "{\"subProofQty\":1}" ];
	134 -> 133;
	135 [ label = "{(= let10 let80)|PREPROCESS :args [ (= let10 let80) ]}", comment = "{\"subProofQty\":1}" ];
	135 -> 133;
	133 -> 132;
	132 -> 1;
	136 [ label = "{let76|AND_ELIM :args [ 0 ]}", comment = "{\"subProofQty\":4}" ];
	137 [ label = "{let77|EQ_RESOLVE}", comment = "{\"subProofQty\":3}" ];
	138 [ label = "{let11|ASSUME}", comment = "{\"subProofQty\":1}" ];
	138 -> 137;
	139 [ label = "{(= let11 let77)|PREPROCESS :args [ (= let11 let77) ]}", comment = "{\"subProofQty\":1}" ];
	139 -> 137;
	137 -> 136;
	136 -> 1;
	140 [ label = "{let73|AND_ELIM :args [ 0 ]}", comment = "{\"subProofQty\":4}" ];
	141 [ label = "{let74|EQ_RESOLVE}", comment = "{\"subProofQty\":3}" ];
	142 [ label = "{let12|ASSUME}", comment = "{\"subProofQty\":1}" ];
	142 -> 141;
	143 [ label = "{(= let12 let74)|PREPROCESS :args [ (= let12 let74) ]}", comment = "{\"subProofQty\":1}" ];
	143 -> 141;
	141 -> 140;
	140 -> 1;
	144 [ label = "{let70|AND_ELIM :args [ 0 ]}", comment = "{\"subProofQty\":4}" ];
	145 [ label = "{let71|EQ_RESOLVE}", comment = "{\"subProofQty\":3}" ];
	146 [ label = "{let13|ASSUME}", comment = "{\"subProofQty\":1}" ];
	146 -> 145;
	147 [ label = "{(= let13 let71)|PREPROCESS :args [ (= let13 let71) ]}", comment = "{\"subProofQty\":1}" ];
	147 -> 145;
	145 -> 144;
	144 -> 1;
	148 [ label = "{let67|AND_ELIM :args [ 0 ]}", comment = "{\"subProofQty\":4}" ];
	149 [ label = "{let68|EQ_RESOLVE}", comment = "{\"subProofQty\":3}" ];
	150 [ label = "{let14|ASSUME}", comment = "{\"subProofQty\":1}" ];
	150 -> 149;
	151 [ label = "{(= let14 let68)|PREPROCESS :args [ (= let14 let68) ]}", comment = "{\"subProofQty\":1}" ];
	151 -> 149;
	149 -> 148;
	148 -> 1;
	152 [ label = "{let64|AND_ELIM :args [ 0 ]}", comment = "{\"subProofQty\":4}" ];
	153 [ label = "{let65|EQ_RESOLVE}", comment = "{\"subProofQty\":3}" ];
	154 [ label = "{let15|ASSUME}", comment = "{\"subProofQty\":1}" ];
	154 -> 153;
	155 [ label = "{(= let15 let65)|PREPROCESS :args [ (= let15 let65) ]}", comment = "{\"subProofQty\":1}" ];
	155 -> 153;
	153 -> 152;
	152 -> 1;
	156 [ label = "{let61|AND_ELIM :args [ 0 ]}", comment = "{\"subProofQty\":4}" ];
	157 [ label = "{let62|EQ_RESOLVE}", comment = "{\"subProofQty\":3}" ];
	158 [ label = "{let16|ASSUME}", comment = "{\"subProofQty\":1}" ];
	158 -> 157;
	159 [ label = "{(= let16 let62)|PREPROCESS :args [ (= let16 let62) ]}", comment = "{\"subProofQty\":1}" ];
	159 -> 157;
	157 -> 156;
	156 -> 1;
	160 [ label = "{let58|AND_ELIM :args [ 0 ]}", comment = "{\"subProofQty\":4}" ];
	161 [ label = "{let59|EQ_RESOLVE}", comment = "{\"subProofQty\":3}" ];
	162 [ label = "{let17|ASSUME}", comment = "{\"subProofQty\":1}" ];
	162 -> 161;
	163 [ label = "{(= let17 let59)|PREPROCESS :args [ (= let17 let59) ]}", comment = "{\"subProofQty\":1}" ];
	163 -> 161;
	161 -> 160;
	160 -> 1;
	164 [ label = "{let55|AND_ELIM :args [ 0 ]}", comment = "{\"subProofQty\":4}" ];
	165 [ label = "{let56|EQ_RESOLVE}", comment = "{\"subProofQty\":3}" ];
	166 [ label = "{let18|ASSUME}", comment = "{\"subProofQty\":1}" ];
	166 -> 165;
	167 [ label = "{(= let18 let56)|PREPROCESS :args [ (= let18 let56) ]}", comment = "{\"subProofQty\":1}" ];
	167 -> 165;
	165 -> 164;
	164 -> 1;
	168 [ label = "{let52|AND_ELIM :args [ 0 ]}", comment = "{\"subProofQty\":4}" ];
	169 [ label = "{let53|EQ_RESOLVE}", comment = "{\"subProofQty\":3}" ];
	170 [ label = "{let19|ASSUME}", comment = "{\"subProofQty\":1}" ];
	170 -> 169;
	171 [ label = "{(= let19 let53)|PREPROCESS :args [ (= let19 let53) ]}", comment = "{\"subProofQty\":1}" ];
	171 -> 169;
	169 -> 168;
	168 -> 1;
	172 [ label = "{let49|AND_ELIM :args [ 0 ]}", comment = "{\"subProofQty\":4}" ];
	173 [ label = "{let50|EQ_RESOLVE}", comment = "{\"subProofQty\":3}" ];
	174 [ label = "{let20|ASSUME}", comment = "{\"subProofQty\":1}" ];
	174 -> 173;
	175 [ label = "{(= let20 let50)|PREPROCESS :args [ (= let20 let50) ]}", comment = "{\"subProofQty\":1}" ];
	175 -> 173;
	173 -> 172;
	172 -> 1;
	176 [ label = "{let46|AND_ELIM :args [ 0 ]}", comment = "{\"subProofQty\":4}" ];
	177 [ label = "{let47|EQ_RESOLVE}", comment = "{\"subProofQty\":3}" ];
	178 [ label = "{let21|ASSUME}", comment = "{\"subProofQty\":1}" ];
	178 -> 177;
	179 [ label = "{(= let21 let47)|PREPROCESS :args [ (= let21 let47) ]}", comment = "{\"subProofQty\":1}" ];
	179 -> 177;
	177 -> 176;
	176 -> 1;
	180 [ label = "{let43|AND_ELIM :args [ 0 ]}", comment = "{\"subProofQty\":4}" ];
	181 [ label = "{let44|EQ_RESOLVE}", comment = "{\"subProofQty\":3}" ];
	182 [ label = "{let22|ASSUME}", comment = "{\"subProofQty\":1}" ];
	182 -> 181;
	183 [ label = "{(= let22 let44)|PREPROCESS :args [ (= let22 let44) ]}", comment = "{\"subProofQty\":1}" ];
	183 -> 181;
	181 -> 180;
	180 -> 1;
	184 [ label = "{let40|AND_ELIM :args [ 0 ]}", comment = "{\"subProofQty\":4}" ];
	185 [ label = "{let41|EQ_RESOLVE}", comment = "{\"subProofQty\":3}" ];
	186 [ label = "{let23|ASSUME}", comment = "{\"subProofQty\":1}" ];
	186 -> 185;
	187 [ label = "{(= let23 let41)|PREPROCESS :args [ (= let23 let41) ]}", comment = "{\"subProofQty\":1}" ];
	187 -> 185;
	185 -> 184;
	184 -> 1;
	188 [ label = "{let38|EQ_RESOLVE}", comment = "{\"subProofQty\":3}" ];
	189 [ label = "{let24|ASSUME}", comment = "{\"subProofQty\":1}" ];
	189 -> 188;
	190 [ label = "{(= let24 let38)|MACRO_SR_EQ_INTRO :args [ let24, 7, 12 ]}", comment = "{\"subProofQty\":1}" ];
	190 -> 188;
	188 -> 1;
	191 [ label = "{let33|AND_ELIM :args [ 1 ]}", comment = "{\"subProofQty\":4}" ];
	192 [ label = "{let34|EQ_RESOLVE}", comment = "{\"subProofQty\":3}" ];
	193 [ label = "{let25|ASSUME}", comment = "{\"subProofQty\":1}" ];
	193 -> 192;
	194 [ label = "{(= let25 let34)|PREPROCESS :args [ (= let25 let34) ]}", comment = "{\"subProofQty\":1}" ];
	194 -> 192;
	192 -> 191;
	191 -> 1;
	195 [ label = "{let31|AND_ELIM :args [ 1 ]}", comment = "{\"subProofQty\":4}" ];
	196 [ label = "{let32|EQ_RESOLVE}", comment = "{\"subProofQty\":3}" ];
	197 [ label = "{let26|ASSUME}", comment = "{\"subProofQty\":1}" ];
	197 -> 196;
	198 [ label = "{(= let26 let32)|PREPROCESS :args [ (= let26 let32) ]}", comment = "{\"subProofQty\":1}" ];
	198 -> 196;
	196 -> 195;
	195 -> 1;
	199 [ label = "{let29|AND_ELIM :args [ 0 ]}", comment = "{\"subProofQty\":4}" ];
	200 [ label = "{let30|EQ_RESOLVE}", comment = "{\"subProofQty\":3}" ];
	201 [ label = "{let27|ASSUME}", comment = "{\"subProofQty\":1}" ];
	201 -> 200;
	202 [ label = "{(= let27 let30)|PREPROCESS :args [ (= let27 let30) ]}", comment = "{\"subProofQty\":1}" ];
	202 -> 200;
	200 -> 199;
	199 -> 1;
	1 -> 0;

}

