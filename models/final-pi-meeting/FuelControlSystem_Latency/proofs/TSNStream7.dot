
digraph proof {
	rankdir="BT";
	node [shape=record];
	comment="{\"letMap\" : {\"let1\" : \"(= arrival_time (+ start_time latency))\", \"let2\" : \"(= latency (+ RW_Pmp_Mn_link_delay RW_Pmp_Mn_propagation_delay RW_Pmp_Mn_tas_jitter RDC_R2_link_delay RDC_R2_propagation_delay RDC_R2_tas_jitter ACS_R3_egress_delay ACS_R3_fabric_delay ACS_R3_ingress_delay ACS_R3_tas_jitter ACS_R2_egress_delay ACS_R2_fabric_delay ACS_R2_ingress_delay ACS_R2_tas_jitter GPM_R2_link_delay GPM_R2_propagation_delay GPM_R2_tas_jitter))\", \"let3\" : \"(= GPM_R2_tas_jitter 200)\", \"let4\" : \"(= GPM_R2_propagation_delay 10)\", \"let5\" : \"(= GPM_R2_link_delay 8)\", \"let6\" : \"(= ACS_R2_tas_jitter 100)\", \"let7\" : \"(= ACS_R2_ingress_delay 9)\", \"let8\" : \"(= ACS_R2_fabric_delay 1008)\", \"let9\" : \"(= ACS_R2_egress_delay 9)\", \"let10\" : \"(= ACS_R3_tas_jitter 100)\", \"let11\" : \"(= ACS_R3_ingress_delay 9)\", \"let12\" : \"(= ACS_R3_fabric_delay 1008)\", \"let13\" : \"(= ACS_R3_egress_delay 9)\", \"let14\" : \"(= RDC_R2_tas_jitter 200)\", \"let15\" : \"(= RDC_R2_propagation_delay 10)\", \"let16\" : \"(= RDC_R2_link_delay 8)\", \"let17\" : \"(= RW_Pmp_Mn_tas_jitter 200)\", \"let18\" : \"(= RW_Pmp_Mn_propagation_delay 10)\", \"let19\" : \"(= RW_Pmp_Mn_link_delay 8)\", \"let20\" : \"(\>= arrival_time (+ arrival_limit threshold))\", \"let21\" : \"(= arrival_limit 9000000)\", \"let22\" : \"(= threshold 200)\", \"let23\" : \"(= start_time 8500000)\", \"let24\" : \"(\>= start_time 8500001)\", \"let25\" : \"(not let24)\", \"let26\" : \"(and let25 (\>= start_time 8500000))\", \"let27\" : \"(\>= threshold 200)\", \"let28\" : \"(and (not (\>= threshold 201)) let27)\", \"let29\" : \"(\>= arrival_limit 9000000)\", \"let30\" : \"(and (not (\>= arrival_limit 9000001)) let29)\", \"let31\" : \"(* (- 1) arrival_time)\", \"let32\" : \"(+ threshold let31 arrival_limit)\", \"let33\" : \"(\>= let32 1)\", \"let34\" : \"(not let33)\", \"let35\" : \"(\>= RW_Pmp_Mn_link_delay 9)\", \"let36\" : \"(not let35)\", \"let37\" : \"(and let36 (\>= RW_Pmp_Mn_link_delay 8))\", \"let38\" : \"(\>= RW_Pmp_Mn_propagation_delay 11)\", \"let39\" : \"(not let38)\", \"let40\" : \"(and let39 (\>= RW_Pmp_Mn_propagation_delay 10))\", \"let41\" : \"(\>= RW_Pmp_Mn_tas_jitter 201)\", \"let42\" : \"(not let41)\", \"let43\" : \"(and let42 (\>= RW_Pmp_Mn_tas_jitter 200))\", \"let44\" : \"(\>= RDC_R2_link_delay 9)\", \"let45\" : \"(not let44)\", \"let46\" : \"(and let45 (\>= RDC_R2_link_delay 8))\", \"let47\" : \"(\>= RDC_R2_propagation_delay 11)\", \"let48\" : \"(not let47)\", \"let49\" : \"(and let48 (\>= RDC_R2_propagation_delay 10))\", \"let50\" : \"(\>= RDC_R2_tas_jitter 201)\", \"let51\" : \"(not let50)\", \"let52\" : \"(and let51 (\>= RDC_R2_tas_jitter 200))\", \"let53\" : \"(\>= ACS_R3_egress_delay 10)\", \"let54\" : \"(not let53)\", \"let55\" : \"(and let54 (\>= ACS_R3_egress_delay 9))\", \"let56\" : \"(\>= ACS_R3_fabric_delay 1009)\", \"let57\" : \"(not let56)\", \"let58\" : \"(and let57 (\>= ACS_R3_fabric_delay 1008))\", \"let59\" : \"(\>= ACS_R3_ingress_delay 10)\", \"let60\" : \"(not let59)\", \"let61\" : \"(and let60 (\>= ACS_R3_ingress_delay 9))\", \"let62\" : \"(\>= ACS_R3_tas_jitter 101)\", \"let63\" : \"(not let62)\", \"let64\" : \"(and let63 (\>= ACS_R3_tas_jitter 100))\", \"let65\" : \"(\>= ACS_R2_egress_delay 10)\", \"let66\" : \"(not let65)\", \"let67\" : \"(and let66 (\>= ACS_R2_egress_delay 9))\", \"let68\" : \"(\>= ACS_R2_fabric_delay 1009)\", \"let69\" : \"(not let68)\", \"let70\" : \"(and let69 (\>= ACS_R2_fabric_delay 1008))\", \"let71\" : \"(\>= ACS_R2_ingress_delay 10)\", \"let72\" : \"(not let71)\", \"let73\" : \"(and let72 (\>= ACS_R2_ingress_delay 9))\", \"let74\" : \"(\>= ACS_R2_tas_jitter 101)\", \"let75\" : \"(not let74)\", \"let76\" : \"(and let75 (\>= ACS_R2_tas_jitter 100))\", \"let77\" : \"(\>= GPM_R2_link_delay 9)\", \"let78\" : \"(not let77)\", \"let79\" : \"(and let78 (\>= GPM_R2_link_delay 8))\", \"let80\" : \"(\>= GPM_R2_propagation_delay 11)\", \"let81\" : \"(not let80)\", \"let82\" : \"(and let81 (\>= GPM_R2_propagation_delay 10))\", \"let83\" : \"(\>= GPM_R2_tas_jitter 201)\", \"let84\" : \"(not let83)\", \"let85\" : \"(and let84 (\>= GPM_R2_tas_jitter 200))\", \"let86\" : \"(+ latency (* (- 1) RW_Pmp_Mn_link_delay) (* (- 1) RW_Pmp_Mn_propagation_delay) (* (- 1) RW_Pmp_Mn_tas_jitter) (* (- 1) RDC_R2_link_delay) (* (- 1) RDC_R2_propagation_delay) (* (- 1) RDC_R2_tas_jitter) (* (- 1) ACS_R3_egress_delay) (* (- 1) ACS_R3_fabric_delay) (* (- 1) ACS_R3_ingress_delay) (* (- 1) ACS_R3_tas_jitter) (* (- 1) ACS_R2_egress_delay) (* (- 1) ACS_R2_fabric_delay) (* (- 1) ACS_R2_ingress_delay) (* (- 1) ACS_R2_tas_jitter) (* (- 1) GPM_R2_link_delay) (* (- 1) GPM_R2_propagation_delay) (* (- 1) GPM_R2_tas_jitter))\", \"let87\" : \"(\>= let86 1)\", \"let88\" : \"(not let87)\", \"let89\" : \"(and let88 (\>= let86 0))\", \"let90\" : \"(+ latency start_time let31)\", \"let91\" : \"(\>= let90 0)\", \"let92\" : \"(and (not (\>= let90 1)) let91)\", \"let93\" : \"(= latency (+ (* (- 1) start_time) arrival_time))\", \"let94\" : \"(not let91)\", \"let95\" : \"(not let29)\", \"let96\" : \"(not let27)\", \"let97\" : \"(or let96 let95 let24 let35 let38 let41 let44 let47 let50 let53 let56 let59 let62 let65 let68 let71 let74 let77 let80 let83 let87 let94 let33)\", \"let98\" : \"(not let34)\", \"let99\" : \"(not let88)\", \"let100\" : \"(not let84)\", \"let101\" : \"(not let81)\", \"let102\" : \"(not let78)\", \"let103\" : \"(not let75)\", \"let104\" : \"(not let72)\", \"let105\" : \"(not let69)\", \"let106\" : \"(not let66)\", \"let107\" : \"(not let63)\", \"let108\" : \"(not let60)\", \"let109\" : \"(not let57)\", \"let110\" : \"(not let54)\", \"let111\" : \"(not let51)\", \"let112\" : \"(not let48)\", \"let113\" : \"(not let45)\", \"let114\" : \"(not let42)\", \"let115\" : \"(not let39)\", \"let116\" : \"(not let36)\", \"let117\" : \"(not let25)\", \"let118\" : \"(or let96 let95 let117 let116 let115 let114 let113 let112 let111 let110 let109 let108 let107 let106 let105 let104 let103 let102 let101 let100 let99 let94 let98)\", \"let119\" : \"(\< let32 1)\", \"let120\" : \"(not let119)\", \"let121\" : \"(* 1.0 9)\", \"let122\" : \"(* 1.0 11)\", \"let123\" : \"(* 1.0 201)\", \"let124\" : \"(* 1.0 10)\", \"let125\" : \"(* 1.0 1009)\", \"let126\" : \"(* 1.0 101)\", \"let127\" : \"(* 1.0 1)\"}}";
	0 [ label = "{(not (and let23 let22 let21 let20 let19 let18 let17 let16 let15 let14 let13 let12 let11 let10 let9 let8 let7 let6 let5 let4 let3 let2 let1))|SCOPE :args [ let23, let22, let21, let20, let19, let18, let17, let16, let15, let14, let13, let12, let11, let10, let9, let8, let7, let6, let5, let4, let3, let2, let1 ]}", comment = "{\"subProofQty\":175}" ];
	1 [ label = "{false|MACRO_RESOLUTION_TRUST :args [ false, false, let91, true, let87, true, let83, true, let80, true, let77, true, let74, true, let71, true, let68, true, let65, true, let62, true, let59, true, let56, true, let53, true, let50, true, let47, true, let44, true, let41, true, let38, true, let35, true, let33, false, let29, false, let27, true, let24 ]}", comment = "{\"subProofQty\":174}" ];
	2 [ label = "{(or let33 let24 let35 let38 let41 let44 let47 let50 let53 let56 let59 let62 let65 let68 let71 let74 let77 let80 let83 let87 let96 let95 let94)|REORDERING}", comment = "{\"subProofQty\":80}" ];
	3 [ label = "{let97|EQ_RESOLVE}", comment = "{\"subProofQty\":79}" ];
	4 [ label = "{let118|NOT_AND}", comment = "{\"subProofQty\":54}" ];
	5 [ label = "{(not (and let27 let29 let25 let36 let39 let42 let45 let48 let51 let54 let57 let60 let63 let66 let69 let72 let75 let78 let81 let84 let88 let91 let34))|SCOPE :args [ let27, let29, let25, let36, let39, let42, let45, let48, let51, let54, let57, let60, let63, let66, let69, let72, let75, let78, let81, let84, let88, let91, let34 ]}", comment = "{\"subProofQty\":53}" ];
	6 [ label = "{false|CONTRA}", comment = "{\"subProofQty\":52}" ];
	7 [ label = "{let119|MACRO_SR_PRED_TRANSFORM :args [ let119 ]}", comment = "{\"subProofQty\":4}" ];
	8 [ label = "{let34|EQ_RESOLVE}", comment = "{\"subProofQty\":3}" ];
	9 [ label = "{let20|ASSUME}", comment = "{\"subProofQty\":1}" ];
	9 -> 8;
	10 [ label = "{(= let20 let34)|MACRO_SR_EQ_INTRO :args [ let20, 7, 12 ]}", comment = "{\"subProofQty\":1}" ];
	10 -> 8;
	8 -> 7;
	7 -> 6;
	11 [ label = "{let120|MACRO_SR_PRED_TRANSFORM :args [ let120 ]}", comment = "{\"subProofQty\":47}" ];
	12 [ label = "{let33|MACRO_SR_PRED_TRANSFORM :args [ let33 ]}", comment = "{\"subProofQty\":46}" ];
	13 [ label = "{let120|SCOPE :args [ let119 ]}", comment = "{\"subProofQty\":45}" ];
	14 [ label = "{false|MACRO_SR_PRED_TRANSFORM :args [ false ]}", comment = "{\"subProofQty\":44}" ];
	15 [ label = "{(\< (+ (* 1.0 let32) (* (- 1.0) let90) (* 1.0 let86) (* 1.0 GPM_R2_tas_jitter) (* 1.0 GPM_R2_propagation_delay) (* 1.0 GPM_R2_link_delay) (* 1.0 ACS_R2_tas_jitter) (* 1.0 ACS_R2_ingress_delay) (* 1.0 ACS_R2_fabric_delay) (* 1.0 ACS_R2_egress_delay) (* 1.0 ACS_R3_tas_jitter) (* 1.0 ACS_R3_ingress_delay) (* 1.0 ACS_R3_fabric_delay) (* 1.0 ACS_R3_egress_delay) (* 1.0 RDC_R2_tas_jitter) (* 1.0 RDC_R2_propagation_delay) (* 1.0 RDC_R2_link_delay) (* 1.0 RW_Pmp_Mn_tas_jitter) (* 1.0 RW_Pmp_Mn_propagation_delay) (* 1.0 RW_Pmp_Mn_link_delay) (* 1.0 start_time) (* (- 1.0) arrival_limit) (* (- 1.0) threshold)) (+ let127 (* (- 1.0) 0) let127 let123 let122 let121 let126 let124 let125 let124 let126 let124 let125 let124 let123 let122 let121 let123 let122 let121 (* 1.0 8500001) (* (- 1.0) 9000000) (* (- 1.0) 200)))|MACRO_ARITH_SCALE_SUM_UB :args [ 1.0, (- 1.0), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, (- 1.0), (- 1.0) ]}", comment = "{\"subProofQty\":43}" ];
	16 [ label = "{let119|ASSUME}", comment = "{\"subProofQty\":1}" ];
	16 -> 15;
	17 [ label = "{let91|ASSUME}", comment = "{\"subProofQty\":1}" ];
	17 -> 15;
	18 [ label = "{(\< let86 1)|MACRO_SR_PRED_TRANSFORM :args [ (\< let86 1) ]}", comment = "{\"subProofQty\":2}" ];
	19 [ label = "{let88|ASSUME}", comment = "{\"subProofQty\":1}" ];
	19 -> 18;
	18 -> 15;
	20 [ label = "{(\< GPM_R2_tas_jitter 201)|MACRO_SR_PRED_TRANSFORM :args [ (\< GPM_R2_tas_jitter 201) ]}", comment = "{\"subProofQty\":2}" ];
	21 [ label = "{let84|ASSUME}", comment = "{\"subProofQty\":1}" ];
	21 -> 20;
	20 -> 15;
	22 [ label = "{(\< GPM_R2_propagation_delay 11)|MACRO_SR_PRED_TRANSFORM :args [ (\< GPM_R2_propagation_delay 11) ]}", comment = "{\"subProofQty\":2}" ];
	23 [ label = "{let81|ASSUME}", comment = "{\"subProofQty\":1}" ];
	23 -> 22;
	22 -> 15;
	24 [ label = "{(\< GPM_R2_link_delay 9)|MACRO_SR_PRED_TRANSFORM :args [ (\< GPM_R2_link_delay 9) ]}", comment = "{\"subProofQty\":2}" ];
	25 [ label = "{let78|ASSUME}", comment = "{\"subProofQty\":1}" ];
	25 -> 24;
	24 -> 15;
	26 [ label = "{(\< ACS_R2_tas_jitter 101)|MACRO_SR_PRED_TRANSFORM :args [ (\< ACS_R2_tas_jitter 101) ]}", comment = "{\"subProofQty\":2}" ];
	27 [ label = "{let75|ASSUME}", comment = "{\"subProofQty\":1}" ];
	27 -> 26;
	26 -> 15;
	28 [ label = "{(\< ACS_R2_ingress_delay 10)|MACRO_SR_PRED_TRANSFORM :args [ (\< ACS_R2_ingress_delay 10) ]}", comment = "{\"subProofQty\":2}" ];
	29 [ label = "{let72|ASSUME}", comment = "{\"subProofQty\":1}" ];
	29 -> 28;
	28 -> 15;
	30 [ label = "{(\< ACS_R2_fabric_delay 1009)|MACRO_SR_PRED_TRANSFORM :args [ (\< ACS_R2_fabric_delay 1009) ]}", comment = "{\"subProofQty\":2}" ];
	31 [ label = "{let69|ASSUME}", comment = "{\"subProofQty\":1}" ];
	31 -> 30;
	30 -> 15;
	32 [ label = "{(\< ACS_R2_egress_delay 10)|MACRO_SR_PRED_TRANSFORM :args [ (\< ACS_R2_egress_delay 10) ]}", comment = "{\"subProofQty\":2}" ];
	33 [ label = "{let66|ASSUME}", comment = "{\"subProofQty\":1}" ];
	33 -> 32;
	32 -> 15;
	34 [ label = "{(\< ACS_R3_tas_jitter 101)|MACRO_SR_PRED_TRANSFORM :args [ (\< ACS_R3_tas_jitter 101) ]}", comment = "{\"subProofQty\":2}" ];
	35 [ label = "{let63|ASSUME}", comment = "{\"subProofQty\":1}" ];
	35 -> 34;
	34 -> 15;
	36 [ label = "{(\< ACS_R3_ingress_delay 10)|MACRO_SR_PRED_TRANSFORM :args [ (\< ACS_R3_ingress_delay 10) ]}", comment = "{\"subProofQty\":2}" ];
	37 [ label = "{let60|ASSUME}", comment = "{\"subProofQty\":1}" ];
	37 -> 36;
	36 -> 15;
	38 [ label = "{(\< ACS_R3_fabric_delay 1009)|MACRO_SR_PRED_TRANSFORM :args [ (\< ACS_R3_fabric_delay 1009) ]}", comment = "{\"subProofQty\":2}" ];
	39 [ label = "{let57|ASSUME}", comment = "{\"subProofQty\":1}" ];
	39 -> 38;
	38 -> 15;
	40 [ label = "{(\< ACS_R3_egress_delay 10)|MACRO_SR_PRED_TRANSFORM :args [ (\< ACS_R3_egress_delay 10) ]}", comment = "{\"subProofQty\":2}" ];
	41 [ label = "{let54|ASSUME}", comment = "{\"subProofQty\":1}" ];
	41 -> 40;
	40 -> 15;
	42 [ label = "{(\< RDC_R2_tas_jitter 201)|MACRO_SR_PRED_TRANSFORM :args [ (\< RDC_R2_tas_jitter 201) ]}", comment = "{\"subProofQty\":2}" ];
	43 [ label = "{let51|ASSUME}", comment = "{\"subProofQty\":1}" ];
	43 -> 42;
	42 -> 15;
	44 [ label = "{(\< RDC_R2_propagation_delay 11)|MACRO_SR_PRED_TRANSFORM :args [ (\< RDC_R2_propagation_delay 11) ]}", comment = "{\"subProofQty\":2}" ];
	45 [ label = "{let48|ASSUME}", comment = "{\"subProofQty\":1}" ];
	45 -> 44;
	44 -> 15;
	46 [ label = "{(\< RDC_R2_link_delay 9)|MACRO_SR_PRED_TRANSFORM :args [ (\< RDC_R2_link_delay 9) ]}", comment = "{\"subProofQty\":2}" ];
	47 [ label = "{let45|ASSUME}", comment = "{\"subProofQty\":1}" ];
	47 -> 46;
	46 -> 15;
	48 [ label = "{(\< RW_Pmp_Mn_tas_jitter 201)|MACRO_SR_PRED_TRANSFORM :args [ (\< RW_Pmp_Mn_tas_jitter 201) ]}", comment = "{\"subProofQty\":2}" ];
	49 [ label = "{let42|ASSUME}", comment = "{\"subProofQty\":1}" ];
	49 -> 48;
	48 -> 15;
	50 [ label = "{(\< RW_Pmp_Mn_propagation_delay 11)|MACRO_SR_PRED_TRANSFORM :args [ (\< RW_Pmp_Mn_propagation_delay 11) ]}", comment = "{\"subProofQty\":2}" ];
	51 [ label = "{let39|ASSUME}", comment = "{\"subProofQty\":1}" ];
	51 -> 50;
	50 -> 15;
	52 [ label = "{(\< RW_Pmp_Mn_link_delay 9)|MACRO_SR_PRED_TRANSFORM :args [ (\< RW_Pmp_Mn_link_delay 9) ]}", comment = "{\"subProofQty\":2}" ];
	53 [ label = "{let36|ASSUME}", comment = "{\"subProofQty\":1}" ];
	53 -> 52;
	52 -> 15;
	54 [ label = "{(\< start_time 8500001)|MACRO_SR_PRED_TRANSFORM :args [ (\< start_time 8500001) ]}", comment = "{\"subProofQty\":2}" ];
	55 [ label = "{let25|ASSUME}", comment = "{\"subProofQty\":1}" ];
	55 -> 54;
	54 -> 15;
	56 [ label = "{let29|ASSUME}", comment = "{\"subProofQty\":1}" ];
	56 -> 15;
	57 [ label = "{let27|ASSUME}", comment = "{\"subProofQty\":1}" ];
	57 -> 15;
	15 -> 14;
	14 -> 13;
	13 -> 12;
	12 -> 11;
	11 -> 6;
	6 -> 5;
	5 -> 4;
	4 -> 3;
	58 [ label = "{(= let118 let97)|CONG :args [ or ]}", comment = "{\"subProofQty\":24}" ];
	59 [ label = "{(= let96 let96)|REFL}", comment = "{\"subProofQty\":1}" ];
	59 -> 58;
	60 [ label = "{(= let95 let95)|REFL}", comment = "{\"subProofQty\":1}" ];
	60 -> 58;
	61 [ label = "{(= let117 let24)|MACRO_SR_PRED_INTRO :args [ (= let117 let24) ]}", comment = "{\"subProofQty\":1}" ];
	61 -> 58;
	62 [ label = "{(= let116 let35)|MACRO_SR_PRED_INTRO :args [ (= let116 let35) ]}", comment = "{\"subProofQty\":1}" ];
	62 -> 58;
	63 [ label = "{(= let115 let38)|MACRO_SR_PRED_INTRO :args [ (= let115 let38) ]}", comment = "{\"subProofQty\":1}" ];
	63 -> 58;
	64 [ label = "{(= let114 let41)|MACRO_SR_PRED_INTRO :args [ (= let114 let41) ]}", comment = "{\"subProofQty\":1}" ];
	64 -> 58;
	65 [ label = "{(= let113 let44)|MACRO_SR_PRED_INTRO :args [ (= let113 let44) ]}", comment = "{\"subProofQty\":1}" ];
	65 -> 58;
	66 [ label = "{(= let112 let47)|MACRO_SR_PRED_INTRO :args [ (= let112 let47) ]}", comment = "{\"subProofQty\":1}" ];
	66 -> 58;
	67 [ label = "{(= let111 let50)|MACRO_SR_PRED_INTRO :args [ (= let111 let50) ]}", comment = "{\"subProofQty\":1}" ];
	67 -> 58;
	68 [ label = "{(= let110 let53)|MACRO_SR_PRED_INTRO :args [ (= let110 let53) ]}", comment = "{\"subProofQty\":1}" ];
	68 -> 58;
	69 [ label = "{(= let109 let56)|MACRO_SR_PRED_INTRO :args [ (= let109 let56) ]}", comment = "{\"subProofQty\":1}" ];
	69 -> 58;
	70 [ label = "{(= let108 let59)|MACRO_SR_PRED_INTRO :args [ (= let108 let59) ]}", comment = "{\"subProofQty\":1}" ];
	70 -> 58;
	71 [ label = "{(= let107 let62)|MACRO_SR_PRED_INTRO :args [ (= let107 let62) ]}", comment = "{\"subProofQty\":1}" ];
	71 -> 58;
	72 [ label = "{(= let106 let65)|MACRO_SR_PRED_INTRO :args [ (= let106 let65) ]}", comment = "{\"subProofQty\":1}" ];
	72 -> 58;
	73 [ label = "{(= let105 let68)|MACRO_SR_PRED_INTRO :args [ (= let105 let68) ]}", comment = "{\"subProofQty\":1}" ];
	73 -> 58;
	74 [ label = "{(= let104 let71)|MACRO_SR_PRED_INTRO :args [ (= let104 let71) ]}", comment = "{\"subProofQty\":1}" ];
	74 -> 58;
	75 [ label = "{(= let103 let74)|MACRO_SR_PRED_INTRO :args [ (= let103 let74) ]}", comment = "{\"subProofQty\":1}" ];
	75 -> 58;
	76 [ label = "{(= let102 let77)|MACRO_SR_PRED_INTRO :args [ (= let102 let77) ]}", comment = "{\"subProofQty\":1}" ];
	76 -> 58;
	77 [ label = "{(= let101 let80)|MACRO_SR_PRED_INTRO :args [ (= let101 let80) ]}", comment = "{\"subProofQty\":1}" ];
	77 -> 58;
	78 [ label = "{(= let100 let83)|MACRO_SR_PRED_INTRO :args [ (= let100 let83) ]}", comment = "{\"subProofQty\":1}" ];
	78 -> 58;
	79 [ label = "{(= let99 let87)|MACRO_SR_PRED_INTRO :args [ (= let99 let87) ]}", comment = "{\"subProofQty\":1}" ];
	79 -> 58;
	80 [ label = "{(= let94 let94)|REFL}", comment = "{\"subProofQty\":1}" ];
	80 -> 58;
	81 [ label = "{(= let98 let33)|MACRO_SR_PRED_INTRO :args [ (= let98 let33) ]}", comment = "{\"subProofQty\":1}" ];
	81 -> 58;
	58 -> 3;
	3 -> 2;
	2 -> 1;
	82 [ label = "{let91|AND_ELIM :args [ 1 ]}", comment = "{\"subProofQty\":6}" ];
	83 [ label = "{let92|EQ_RESOLVE}", comment = "{\"subProofQty\":5}" ];
	84 [ label = "{let1|ASSUME}", comment = "{\"subProofQty\":1}" ];
	84 -> 83;
	85 [ label = "{(= let1 let92)|TRANS}", comment = "{\"subProofQty\":3}" ];
	86 [ label = "{(= let1 let93)|MACRO_SR_EQ_INTRO :args [ let1, 7, 12 ]}", comment = "{\"subProofQty\":1}" ];
	86 -> 85;
	87 [ label = "{(= let93 let92)|PREPROCESS :args [ (= let93 let92) ]}", comment = "{\"subProofQty\":1}" ];
	87 -> 85;
	85 -> 83;
	83 -> 82;
	82 -> 1;
	88 [ label = "{let88|AND_ELIM :args [ 0 ]}", comment = "{\"subProofQty\":4}" ];
	89 [ label = "{let89|EQ_RESOLVE}", comment = "{\"subProofQty\":3}" ];
	90 [ label = "{let2|ASSUME}", comment = "{\"subProofQty\":1}" ];
	90 -> 89;
	91 [ label = "{(= let2 let89)|PREPROCESS :args [ (= let2 let89) ]}", comment = "{\"subProofQty\":1}" ];
	91 -> 89;
	89 -> 88;
	88 -> 1;
	92 [ label = "{let84|AND_ELIM :args [ 0 ]}", comment = "{\"subProofQty\":4}" ];
	93 [ label = "{let85|EQ_RESOLVE}", comment = "{\"subProofQty\":3}" ];
	94 [ label = "{let3|ASSUME}", comment = "{\"subProofQty\":1}" ];
	94 -> 93;
	95 [ label = "{(= let3 let85)|PREPROCESS :args [ (= let3 let85) ]}", comment = "{\"subProofQty\":1}" ];
	95 -> 93;
	93 -> 92;
	92 -> 1;
	96 [ label = "{let81|AND_ELIM :args [ 0 ]}", comment = "{\"subProofQty\":4}" ];
	97 [ label = "{let82|EQ_RESOLVE}", comment = "{\"subProofQty\":3}" ];
	98 [ label = "{let4|ASSUME}", comment = "{\"subProofQty\":1}" ];
	98 -> 97;
	99 [ label = "{(= let4 let82)|PREPROCESS :args [ (= let4 let82) ]}", comment = "{\"subProofQty\":1}" ];
	99 -> 97;
	97 -> 96;
	96 -> 1;
	100 [ label = "{let78|AND_ELIM :args [ 0 ]}", comment = "{\"subProofQty\":4}" ];
	101 [ label = "{let79|EQ_RESOLVE}", comment = "{\"subProofQty\":3}" ];
	102 [ label = "{let5|ASSUME}", comment = "{\"subProofQty\":1}" ];
	102 -> 101;
	103 [ label = "{(= let5 let79)|PREPROCESS :args [ (= let5 let79) ]}", comment = "{\"subProofQty\":1}" ];
	103 -> 101;
	101 -> 100;
	100 -> 1;
	104 [ label = "{let75|AND_ELIM :args [ 0 ]}", comment = "{\"subProofQty\":4}" ];
	105 [ label = "{let76|EQ_RESOLVE}", comment = "{\"subProofQty\":3}" ];
	106 [ label = "{let6|ASSUME}", comment = "{\"subProofQty\":1}" ];
	106 -> 105;
	107 [ label = "{(= let6 let76)|PREPROCESS :args [ (= let6 let76) ]}", comment = "{\"subProofQty\":1}" ];
	107 -> 105;
	105 -> 104;
	104 -> 1;
	108 [ label = "{let72|AND_ELIM :args [ 0 ]}", comment = "{\"subProofQty\":4}" ];
	109 [ label = "{let73|EQ_RESOLVE}", comment = "{\"subProofQty\":3}" ];
	110 [ label = "{let7|ASSUME}", comment = "{\"subProofQty\":1}" ];
	110 -> 109;
	111 [ label = "{(= let7 let73)|PREPROCESS :args [ (= let7 let73) ]}", comment = "{\"subProofQty\":1}" ];
	111 -> 109;
	109 -> 108;
	108 -> 1;
	112 [ label = "{let69|AND_ELIM :args [ 0 ]}", comment = "{\"subProofQty\":4}" ];
	113 [ label = "{let70|EQ_RESOLVE}", comment = "{\"subProofQty\":3}" ];
	114 [ label = "{let8|ASSUME}", comment = "{\"subProofQty\":1}" ];
	114 -> 113;
	115 [ label = "{(= let8 let70)|PREPROCESS :args [ (= let8 let70) ]}", comment = "{\"subProofQty\":1}" ];
	115 -> 113;
	113 -> 112;
	112 -> 1;
	116 [ label = "{let66|AND_ELIM :args [ 0 ]}", comment = "{\"subProofQty\":4}" ];
	117 [ label = "{let67|EQ_RESOLVE}", comment = "{\"subProofQty\":3}" ];
	118 [ label = "{let9|ASSUME}", comment = "{\"subProofQty\":1}" ];
	118 -> 117;
	119 [ label = "{(= let9 let67)|PREPROCESS :args [ (= let9 let67) ]}", comment = "{\"subProofQty\":1}" ];
	119 -> 117;
	117 -> 116;
	116 -> 1;
	120 [ label = "{let63|AND_ELIM :args [ 0 ]}", comment = "{\"subProofQty\":4}" ];
	121 [ label = "{let64|EQ_RESOLVE}", comment = "{\"subProofQty\":3}" ];
	122 [ label = "{let10|ASSUME}", comment = "{\"subProofQty\":1}" ];
	122 -> 121;
	123 [ label = "{(= let10 let64)|PREPROCESS :args [ (= let10 let64) ]}", comment = "{\"subProofQty\":1}" ];
	123 -> 121;
	121 -> 120;
	120 -> 1;
	124 [ label = "{let60|AND_ELIM :args [ 0 ]}", comment = "{\"subProofQty\":4}" ];
	125 [ label = "{let61|EQ_RESOLVE}", comment = "{\"subProofQty\":3}" ];
	126 [ label = "{let11|ASSUME}", comment = "{\"subProofQty\":1}" ];
	126 -> 125;
	127 [ label = "{(= let11 let61)|PREPROCESS :args [ (= let11 let61) ]}", comment = "{\"subProofQty\":1}" ];
	127 -> 125;
	125 -> 124;
	124 -> 1;
	128 [ label = "{let57|AND_ELIM :args [ 0 ]}", comment = "{\"subProofQty\":4}" ];
	129 [ label = "{let58|EQ_RESOLVE}", comment = "{\"subProofQty\":3}" ];
	130 [ label = "{let12|ASSUME}", comment = "{\"subProofQty\":1}" ];
	130 -> 129;
	131 [ label = "{(= let12 let58)|PREPROCESS :args [ (= let12 let58) ]}", comment = "{\"subProofQty\":1}" ];
	131 -> 129;
	129 -> 128;
	128 -> 1;
	132 [ label = "{let54|AND_ELIM :args [ 0 ]}", comment = "{\"subProofQty\":4}" ];
	133 [ label = "{let55|EQ_RESOLVE}", comment = "{\"subProofQty\":3}" ];
	134 [ label = "{let13|ASSUME}", comment = "{\"subProofQty\":1}" ];
	134 -> 133;
	135 [ label = "{(= let13 let55)|PREPROCESS :args [ (= let13 let55) ]}", comment = "{\"subProofQty\":1}" ];
	135 -> 133;
	133 -> 132;
	132 -> 1;
	136 [ label = "{let51|AND_ELIM :args [ 0 ]}", comment = "{\"subProofQty\":4}" ];
	137 [ label = "{let52|EQ_RESOLVE}", comment = "{\"subProofQty\":3}" ];
	138 [ label = "{let14|ASSUME}", comment = "{\"subProofQty\":1}" ];
	138 -> 137;
	139 [ label = "{(= let14 let52)|PREPROCESS :args [ (= let14 let52) ]}", comment = "{\"subProofQty\":1}" ];
	139 -> 137;
	137 -> 136;
	136 -> 1;
	140 [ label = "{let48|AND_ELIM :args [ 0 ]}", comment = "{\"subProofQty\":4}" ];
	141 [ label = "{let49|EQ_RESOLVE}", comment = "{\"subProofQty\":3}" ];
	142 [ label = "{let15|ASSUME}", comment = "{\"subProofQty\":1}" ];
	142 -> 141;
	143 [ label = "{(= let15 let49)|PREPROCESS :args [ (= let15 let49) ]}", comment = "{\"subProofQty\":1}" ];
	143 -> 141;
	141 -> 140;
	140 -> 1;
	144 [ label = "{let45|AND_ELIM :args [ 0 ]}", comment = "{\"subProofQty\":4}" ];
	145 [ label = "{let46|EQ_RESOLVE}", comment = "{\"subProofQty\":3}" ];
	146 [ label = "{let16|ASSUME}", comment = "{\"subProofQty\":1}" ];
	146 -> 145;
	147 [ label = "{(= let16 let46)|PREPROCESS :args [ (= let16 let46) ]}", comment = "{\"subProofQty\":1}" ];
	147 -> 145;
	145 -> 144;
	144 -> 1;
	148 [ label = "{let42|AND_ELIM :args [ 0 ]}", comment = "{\"subProofQty\":4}" ];
	149 [ label = "{let43|EQ_RESOLVE}", comment = "{\"subProofQty\":3}" ];
	150 [ label = "{let17|ASSUME}", comment = "{\"subProofQty\":1}" ];
	150 -> 149;
	151 [ label = "{(= let17 let43)|PREPROCESS :args [ (= let17 let43) ]}", comment = "{\"subProofQty\":1}" ];
	151 -> 149;
	149 -> 148;
	148 -> 1;
	152 [ label = "{let39|AND_ELIM :args [ 0 ]}", comment = "{\"subProofQty\":4}" ];
	153 [ label = "{let40|EQ_RESOLVE}", comment = "{\"subProofQty\":3}" ];
	154 [ label = "{let18|ASSUME}", comment = "{\"subProofQty\":1}" ];
	154 -> 153;
	155 [ label = "{(= let18 let40)|PREPROCESS :args [ (= let18 let40) ]}", comment = "{\"subProofQty\":1}" ];
	155 -> 153;
	153 -> 152;
	152 -> 1;
	156 [ label = "{let36|AND_ELIM :args [ 0 ]}", comment = "{\"subProofQty\":4}" ];
	157 [ label = "{let37|EQ_RESOLVE}", comment = "{\"subProofQty\":3}" ];
	158 [ label = "{let19|ASSUME}", comment = "{\"subProofQty\":1}" ];
	158 -> 157;
	159 [ label = "{(= let19 let37)|PREPROCESS :args [ (= let19 let37) ]}", comment = "{\"subProofQty\":1}" ];
	159 -> 157;
	157 -> 156;
	156 -> 1;
	160 [ label = "{let34|EQ_RESOLVE}", comment = "{\"subProofQty\":3}" ];
	161 [ label = "{let20|ASSUME}", comment = "{\"subProofQty\":1}" ];
	161 -> 160;
	162 [ label = "{(= let20 let34)|MACRO_SR_EQ_INTRO :args [ let20, 7, 12 ]}", comment = "{\"subProofQty\":1}" ];
	162 -> 160;
	160 -> 1;
	163 [ label = "{let29|AND_ELIM :args [ 1 ]}", comment = "{\"subProofQty\":4}" ];
	164 [ label = "{let30|EQ_RESOLVE}", comment = "{\"subProofQty\":3}" ];
	165 [ label = "{let21|ASSUME}", comment = "{\"subProofQty\":1}" ];
	165 -> 164;
	166 [ label = "{(= let21 let30)|PREPROCESS :args [ (= let21 let30) ]}", comment = "{\"subProofQty\":1}" ];
	166 -> 164;
	164 -> 163;
	163 -> 1;
	167 [ label = "{let27|AND_ELIM :args [ 1 ]}", comment = "{\"subProofQty\":4}" ];
	168 [ label = "{let28|EQ_RESOLVE}", comment = "{\"subProofQty\":3}" ];
	169 [ label = "{let22|ASSUME}", comment = "{\"subProofQty\":1}" ];
	169 -> 168;
	170 [ label = "{(= let22 let28)|PREPROCESS :args [ (= let22 let28) ]}", comment = "{\"subProofQty\":1}" ];
	170 -> 168;
	168 -> 167;
	167 -> 1;
	171 [ label = "{let25|AND_ELIM :args [ 0 ]}", comment = "{\"subProofQty\":4}" ];
	172 [ label = "{let26|EQ_RESOLVE}", comment = "{\"subProofQty\":3}" ];
	173 [ label = "{let23|ASSUME}", comment = "{\"subProofQty\":1}" ];
	173 -> 172;
	174 [ label = "{(= let23 let26)|PREPROCESS :args [ (= let23 let26) ]}", comment = "{\"subProofQty\":1}" ];
	174 -> 172;
	172 -> 171;
	171 -> 1;
	1 -> 0;

}

