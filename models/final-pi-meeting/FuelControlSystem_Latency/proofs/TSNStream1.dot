
digraph proof {
	rankdir="BT";
	node [shape=record];
	comment="{\"letMap\" : {\"let1\" : \"(= arrival_time (+ start_time latency))\", \"let2\" : \"(= latency (+ R_Eng_SO_Valve_link_delay R_Eng_SO_Valve_propagation_delay R_Eng_SO_Valve_tas_jitter RDC_R1_link_delay RDC_R1_propagation_delay RDC_R1_tas_jitter ACS_R2_egress_delay ACS_R2_fabric_delay ACS_R2_ingress_delay ACS_R2_tas_jitter GPM_R2_link_delay GPM_R2_propagation_delay GPM_R2_tas_jitter))\", \"let3\" : \"(= GPM_R2_tas_jitter 200)\", \"let4\" : \"(= GPM_R2_propagation_delay 10)\", \"let5\" : \"(= GPM_R2_link_delay 8)\", \"let6\" : \"(= ACS_R2_tas_jitter 100)\", \"let7\" : \"(= ACS_R2_ingress_delay 9)\", \"let8\" : \"(= ACS_R2_fabric_delay 1008)\", \"let9\" : \"(= ACS_R2_egress_delay 9)\", \"let10\" : \"(= RDC_R1_tas_jitter 200)\", \"let11\" : \"(= RDC_R1_propagation_delay 10)\", \"let12\" : \"(= RDC_R1_link_delay 8)\", \"let13\" : \"(= R_Eng_SO_Valve_tas_jitter 200)\", \"let14\" : \"(= R_Eng_SO_Valve_propagation_delay 10)\", \"let15\" : \"(= R_Eng_SO_Valve_link_delay 8)\", \"let16\" : \"(\>= arrival_time (+ arrival_limit threshold))\", \"let17\" : \"(= arrival_limit 2600000)\", \"let18\" : \"(= threshold 200)\", \"let19\" : \"(= start_time 2500000)\", \"let20\" : \"(\>= start_time 2500001)\", \"let21\" : \"(not let20)\", \"let22\" : \"(and let21 (\>= start_time 2500000))\", \"let23\" : \"(\>= threshold 200)\", \"let24\" : \"(and (not (\>= threshold 201)) let23)\", \"let25\" : \"(\>= arrival_limit 2600000)\", \"let26\" : \"(and (not (\>= arrival_limit 2600001)) let25)\", \"let27\" : \"(* (- 1) arrival_time)\", \"let28\" : \"(+ threshold let27 arrival_limit)\", \"let29\" : \"(\>= let28 1)\", \"let30\" : \"(not let29)\", \"let31\" : \"(\>= R_Eng_SO_Valve_link_delay 9)\", \"let32\" : \"(not let31)\", \"let33\" : \"(and let32 (\>= R_Eng_SO_Valve_link_delay 8))\", \"let34\" : \"(\>= R_Eng_SO_Valve_propagation_delay 11)\", \"let35\" : \"(not let34)\", \"let36\" : \"(and let35 (\>= R_Eng_SO_Valve_propagation_delay 10))\", \"let37\" : \"(\>= R_Eng_SO_Valve_tas_jitter 201)\", \"let38\" : \"(not let37)\", \"let39\" : \"(and let38 (\>= R_Eng_SO_Valve_tas_jitter 200))\", \"let40\" : \"(\>= RDC_R1_link_delay 9)\", \"let41\" : \"(not let40)\", \"let42\" : \"(and let41 (\>= RDC_R1_link_delay 8))\", \"let43\" : \"(\>= RDC_R1_propagation_delay 11)\", \"let44\" : \"(not let43)\", \"let45\" : \"(and let44 (\>= RDC_R1_propagation_delay 10))\", \"let46\" : \"(\>= RDC_R1_tas_jitter 201)\", \"let47\" : \"(not let46)\", \"let48\" : \"(and let47 (\>= RDC_R1_tas_jitter 200))\", \"let49\" : \"(\>= ACS_R2_egress_delay 10)\", \"let50\" : \"(not let49)\", \"let51\" : \"(and let50 (\>= ACS_R2_egress_delay 9))\", \"let52\" : \"(\>= ACS_R2_fabric_delay 1009)\", \"let53\" : \"(not let52)\", \"let54\" : \"(and let53 (\>= ACS_R2_fabric_delay 1008))\", \"let55\" : \"(\>= ACS_R2_ingress_delay 10)\", \"let56\" : \"(not let55)\", \"let57\" : \"(and let56 (\>= ACS_R2_ingress_delay 9))\", \"let58\" : \"(\>= ACS_R2_tas_jitter 101)\", \"let59\" : \"(not let58)\", \"let60\" : \"(and let59 (\>= ACS_R2_tas_jitter 100))\", \"let61\" : \"(\>= GPM_R2_link_delay 9)\", \"let62\" : \"(not let61)\", \"let63\" : \"(and let62 (\>= GPM_R2_link_delay 8))\", \"let64\" : \"(\>= GPM_R2_propagation_delay 11)\", \"let65\" : \"(not let64)\", \"let66\" : \"(and let65 (\>= GPM_R2_propagation_delay 10))\", \"let67\" : \"(\>= GPM_R2_tas_jitter 201)\", \"let68\" : \"(not let67)\", \"let69\" : \"(and let68 (\>= GPM_R2_tas_jitter 200))\", \"let70\" : \"(+ latency (* (- 1) R_Eng_SO_Valve_link_delay) (* (- 1) R_Eng_SO_Valve_propagation_delay) (* (- 1) R_Eng_SO_Valve_tas_jitter) (* (- 1) RDC_R1_link_delay) (* (- 1) RDC_R1_propagation_delay) (* (- 1) RDC_R1_tas_jitter) (* (- 1) ACS_R2_egress_delay) (* (- 1) ACS_R2_fabric_delay) (* (- 1) ACS_R2_ingress_delay) (* (- 1) ACS_R2_tas_jitter) (* (- 1) GPM_R2_link_delay) (* (- 1) GPM_R2_propagation_delay) (* (- 1) GPM_R2_tas_jitter))\", \"let71\" : \"(\>= let70 1)\", \"let72\" : \"(not let71)\", \"let73\" : \"(and let72 (\>= let70 0))\", \"let74\" : \"(+ latency start_time let27)\", \"let75\" : \"(\>= let74 0)\", \"let76\" : \"(and (not (\>= let74 1)) let75)\", \"let77\" : \"(= latency (+ (* (- 1) start_time) arrival_time))\", \"let78\" : \"(not let75)\", \"let79\" : \"(not let25)\", \"let80\" : \"(not let23)\", \"let81\" : \"(or let80 let79 let20 let31 let34 let37 let40 let43 let46 let49 let52 let55 let58 let61 let64 let67 let71 let78 let29)\", \"let82\" : \"(not let30)\", \"let83\" : \"(not let72)\", \"let84\" : \"(not let68)\", \"let85\" : \"(not let65)\", \"let86\" : \"(not let62)\", \"let87\" : \"(not let59)\", \"let88\" : \"(not let56)\", \"let89\" : \"(not let53)\", \"let90\" : \"(not let50)\", \"let91\" : \"(not let47)\", \"let92\" : \"(not let44)\", \"let93\" : \"(not let41)\", \"let94\" : \"(not let38)\", \"let95\" : \"(not let35)\", \"let96\" : \"(not let32)\", \"let97\" : \"(not let21)\", \"let98\" : \"(or let80 let79 let97 let96 let95 let94 let93 let92 let91 let90 let89 let88 let87 let86 let85 let84 let83 let78 let82)\", \"let99\" : \"(\< let28 1)\", \"let100\" : \"(not let99)\", \"let101\" : \"(* 1.0 9)\", \"let102\" : \"(* 1.0 11)\", \"let103\" : \"(* 1.0 201)\", \"let104\" : \"(* 1.0 10)\", \"let105\" : \"(* 1.0 1)\"}}";
	0 [ label = "{(not (and let19 let18 let17 let16 let15 let14 let13 let12 let11 let10 let9 let8 let7 let6 let5 let4 let3 let2 let1))|SCOPE :args [ let19, let18, let17, let16, let15, let14, let13, let12, let11, let10, let9, let8, let7, let6, let5, let4, let3, let2, let1 ]}", comment = "{\"subProofQty\":147}" ];
	1 [ label = "{false|MACRO_RESOLUTION_TRUST :args [ false, false, let75, true, let71, true, let67, true, let64, true, let61, true, let58, true, let55, true, let52, true, let49, true, let46, true, let43, true, let40, true, let37, true, let34, true, let31, true, let29, false, let25, false, let23, true, let20 ]}", comment = "{\"subProofQty\":146}" ];
	2 [ label = "{(or let29 let20 let31 let34 let37 let40 let43 let46 let49 let52 let55 let58 let61 let64 let67 let71 let80 let79 let78)|REORDERING}", comment = "{\"subProofQty\":68}" ];
	3 [ label = "{let81|EQ_RESOLVE}", comment = "{\"subProofQty\":67}" ];
	4 [ label = "{let98|NOT_AND}", comment = "{\"subProofQty\":46}" ];
	5 [ label = "{(not (and let23 let25 let21 let32 let35 let38 let41 let44 let47 let50 let53 let56 let59 let62 let65 let68 let72 let75 let30))|SCOPE :args [ let23, let25, let21, let32, let35, let38, let41, let44, let47, let50, let53, let56, let59, let62, let65, let68, let72, let75, let30 ]}", comment = "{\"subProofQty\":45}" ];
	6 [ label = "{false|CONTRA}", comment = "{\"subProofQty\":44}" ];
	7 [ label = "{let99|MACRO_SR_PRED_TRANSFORM :args [ let99 ]}", comment = "{\"subProofQty\":4}" ];
	8 [ label = "{let30|EQ_RESOLVE}", comment = "{\"subProofQty\":3}" ];
	9 [ label = "{let16|ASSUME}", comment = "{\"subProofQty\":1}" ];
	9 -> 8;
	10 [ label = "{(= let16 let30)|MACRO_SR_EQ_INTRO :args [ let16, 7, 12 ]}", comment = "{\"subProofQty\":1}" ];
	10 -> 8;
	8 -> 7;
	7 -> 6;
	11 [ label = "{let100|MACRO_SR_PRED_TRANSFORM :args [ let100 ]}", comment = "{\"subProofQty\":39}" ];
	12 [ label = "{let29|MACRO_SR_PRED_TRANSFORM :args [ let29 ]}", comment = "{\"subProofQty\":38}" ];
	13 [ label = "{let100|SCOPE :args [ let99 ]}", comment = "{\"subProofQty\":37}" ];
	14 [ label = "{false|MACRO_SR_PRED_TRANSFORM :args [ false ]}", comment = "{\"subProofQty\":36}" ];
	15 [ label = "{(\< (+ (* 1.0 let28) (* (- 1.0) let74) (* 1.0 let70) (* 1.0 GPM_R2_tas_jitter) (* 1.0 GPM_R2_propagation_delay) (* 1.0 GPM_R2_link_delay) (* 1.0 ACS_R2_tas_jitter) (* 1.0 ACS_R2_ingress_delay) (* 1.0 ACS_R2_fabric_delay) (* 1.0 ACS_R2_egress_delay) (* 1.0 RDC_R1_tas_jitter) (* 1.0 RDC_R1_propagation_delay) (* 1.0 RDC_R1_link_delay) (* 1.0 R_Eng_SO_Valve_tas_jitter) (* 1.0 R_Eng_SO_Valve_propagation_delay) (* 1.0 R_Eng_SO_Valve_link_delay) (* 1.0 start_time) (* (- 1.0) arrival_limit) (* (- 1.0) threshold)) (+ let105 (* (- 1.0) 0) let105 let103 let102 let101 (* 1.0 101) let104 (* 1.0 1009) let104 let103 let102 let101 let103 let102 let101 (* 1.0 2500001) (* (- 1.0) 2600000) (* (- 1.0) 200)))|MACRO_ARITH_SCALE_SUM_UB :args [ 1.0, (- 1.0), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, (- 1.0), (- 1.0) ]}", comment = "{\"subProofQty\":35}" ];
	16 [ label = "{let99|ASSUME}", comment = "{\"subProofQty\":1}" ];
	16 -> 15;
	17 [ label = "{let75|ASSUME}", comment = "{\"subProofQty\":1}" ];
	17 -> 15;
	18 [ label = "{(\< let70 1)|MACRO_SR_PRED_TRANSFORM :args [ (\< let70 1) ]}", comment = "{\"subProofQty\":2}" ];
	19 [ label = "{let72|ASSUME}", comment = "{\"subProofQty\":1}" ];
	19 -> 18;
	18 -> 15;
	20 [ label = "{(\< GPM_R2_tas_jitter 201)|MACRO_SR_PRED_TRANSFORM :args [ (\< GPM_R2_tas_jitter 201) ]}", comment = "{\"subProofQty\":2}" ];
	21 [ label = "{let68|ASSUME}", comment = "{\"subProofQty\":1}" ];
	21 -> 20;
	20 -> 15;
	22 [ label = "{(\< GPM_R2_propagation_delay 11)|MACRO_SR_PRED_TRANSFORM :args [ (\< GPM_R2_propagation_delay 11) ]}", comment = "{\"subProofQty\":2}" ];
	23 [ label = "{let65|ASSUME}", comment = "{\"subProofQty\":1}" ];
	23 -> 22;
	22 -> 15;
	24 [ label = "{(\< GPM_R2_link_delay 9)|MACRO_SR_PRED_TRANSFORM :args [ (\< GPM_R2_link_delay 9) ]}", comment = "{\"subProofQty\":2}" ];
	25 [ label = "{let62|ASSUME}", comment = "{\"subProofQty\":1}" ];
	25 -> 24;
	24 -> 15;
	26 [ label = "{(\< ACS_R2_tas_jitter 101)|MACRO_SR_PRED_TRANSFORM :args [ (\< ACS_R2_tas_jitter 101) ]}", comment = "{\"subProofQty\":2}" ];
	27 [ label = "{let59|ASSUME}", comment = "{\"subProofQty\":1}" ];
	27 -> 26;
	26 -> 15;
	28 [ label = "{(\< ACS_R2_ingress_delay 10)|MACRO_SR_PRED_TRANSFORM :args [ (\< ACS_R2_ingress_delay 10) ]}", comment = "{\"subProofQty\":2}" ];
	29 [ label = "{let56|ASSUME}", comment = "{\"subProofQty\":1}" ];
	29 -> 28;
	28 -> 15;
	30 [ label = "{(\< ACS_R2_fabric_delay 1009)|MACRO_SR_PRED_TRANSFORM :args [ (\< ACS_R2_fabric_delay 1009) ]}", comment = "{\"subProofQty\":2}" ];
	31 [ label = "{let53|ASSUME}", comment = "{\"subProofQty\":1}" ];
	31 -> 30;
	30 -> 15;
	32 [ label = "{(\< ACS_R2_egress_delay 10)|MACRO_SR_PRED_TRANSFORM :args [ (\< ACS_R2_egress_delay 10) ]}", comment = "{\"subProofQty\":2}" ];
	33 [ label = "{let50|ASSUME}", comment = "{\"subProofQty\":1}" ];
	33 -> 32;
	32 -> 15;
	34 [ label = "{(\< RDC_R1_tas_jitter 201)|MACRO_SR_PRED_TRANSFORM :args [ (\< RDC_R1_tas_jitter 201) ]}", comment = "{\"subProofQty\":2}" ];
	35 [ label = "{let47|ASSUME}", comment = "{\"subProofQty\":1}" ];
	35 -> 34;
	34 -> 15;
	36 [ label = "{(\< RDC_R1_propagation_delay 11)|MACRO_SR_PRED_TRANSFORM :args [ (\< RDC_R1_propagation_delay 11) ]}", comment = "{\"subProofQty\":2}" ];
	37 [ label = "{let44|ASSUME}", comment = "{\"subProofQty\":1}" ];
	37 -> 36;
	36 -> 15;
	38 [ label = "{(\< RDC_R1_link_delay 9)|MACRO_SR_PRED_TRANSFORM :args [ (\< RDC_R1_link_delay 9) ]}", comment = "{\"subProofQty\":2}" ];
	39 [ label = "{let41|ASSUME}", comment = "{\"subProofQty\":1}" ];
	39 -> 38;
	38 -> 15;
	40 [ label = "{(\< R_Eng_SO_Valve_tas_jitter 201)|MACRO_SR_PRED_TRANSFORM :args [ (\< R_Eng_SO_Valve_tas_jitter 201) ]}", comment = "{\"subProofQty\":2}" ];
	41 [ label = "{let38|ASSUME}", comment = "{\"subProofQty\":1}" ];
	41 -> 40;
	40 -> 15;
	42 [ label = "{(\< R_Eng_SO_Valve_propagation_delay 11)|MACRO_SR_PRED_TRANSFORM :args [ (\< R_Eng_SO_Valve_propagation_delay 11) ]}", comment = "{\"subProofQty\":2}" ];
	43 [ label = "{let35|ASSUME}", comment = "{\"subProofQty\":1}" ];
	43 -> 42;
	42 -> 15;
	44 [ label = "{(\< R_Eng_SO_Valve_link_delay 9)|MACRO_SR_PRED_TRANSFORM :args [ (\< R_Eng_SO_Valve_link_delay 9) ]}", comment = "{\"subProofQty\":2}" ];
	45 [ label = "{let32|ASSUME}", comment = "{\"subProofQty\":1}" ];
	45 -> 44;
	44 -> 15;
	46 [ label = "{(\< start_time 2500001)|MACRO_SR_PRED_TRANSFORM :args [ (\< start_time 2500001) ]}", comment = "{\"subProofQty\":2}" ];
	47 [ label = "{let21|ASSUME}", comment = "{\"subProofQty\":1}" ];
	47 -> 46;
	46 -> 15;
	48 [ label = "{let25|ASSUME}", comment = "{\"subProofQty\":1}" ];
	48 -> 15;
	49 [ label = "{let23|ASSUME}", comment = "{\"subProofQty\":1}" ];
	49 -> 15;
	15 -> 14;
	14 -> 13;
	13 -> 12;
	12 -> 11;
	11 -> 6;
	6 -> 5;
	5 -> 4;
	4 -> 3;
	50 [ label = "{(= let98 let81)|CONG :args [ or ]}", comment = "{\"subProofQty\":20}" ];
	51 [ label = "{(= let80 let80)|REFL}", comment = "{\"subProofQty\":1}" ];
	51 -> 50;
	52 [ label = "{(= let79 let79)|REFL}", comment = "{\"subProofQty\":1}" ];
	52 -> 50;
	53 [ label = "{(= let97 let20)|MACRO_SR_PRED_INTRO :args [ (= let97 let20) ]}", comment = "{\"subProofQty\":1}" ];
	53 -> 50;
	54 [ label = "{(= let96 let31)|MACRO_SR_PRED_INTRO :args [ (= let96 let31) ]}", comment = "{\"subProofQty\":1}" ];
	54 -> 50;
	55 [ label = "{(= let95 let34)|MACRO_SR_PRED_INTRO :args [ (= let95 let34) ]}", comment = "{\"subProofQty\":1}" ];
	55 -> 50;
	56 [ label = "{(= let94 let37)|MACRO_SR_PRED_INTRO :args [ (= let94 let37) ]}", comment = "{\"subProofQty\":1}" ];
	56 -> 50;
	57 [ label = "{(= let93 let40)|MACRO_SR_PRED_INTRO :args [ (= let93 let40) ]}", comment = "{\"subProofQty\":1}" ];
	57 -> 50;
	58 [ label = "{(= let92 let43)|MACRO_SR_PRED_INTRO :args [ (= let92 let43) ]}", comment = "{\"subProofQty\":1}" ];
	58 -> 50;
	59 [ label = "{(= let91 let46)|MACRO_SR_PRED_INTRO :args [ (= let91 let46) ]}", comment = "{\"subProofQty\":1}" ];
	59 -> 50;
	60 [ label = "{(= let90 let49)|MACRO_SR_PRED_INTRO :args [ (= let90 let49) ]}", comment = "{\"subProofQty\":1}" ];
	60 -> 50;
	61 [ label = "{(= let89 let52)|MACRO_SR_PRED_INTRO :args [ (= let89 let52) ]}", comment = "{\"subProofQty\":1}" ];
	61 -> 50;
	62 [ label = "{(= let88 let55)|MACRO_SR_PRED_INTRO :args [ (= let88 let55) ]}", comment = "{\"subProofQty\":1}" ];
	62 -> 50;
	63 [ label = "{(= let87 let58)|MACRO_SR_PRED_INTRO :args [ (= let87 let58) ]}", comment = "{\"subProofQty\":1}" ];
	63 -> 50;
	64 [ label = "{(= let86 let61)|MACRO_SR_PRED_INTRO :args [ (= let86 let61) ]}", comment = "{\"subProofQty\":1}" ];
	64 -> 50;
	65 [ label = "{(= let85 let64)|MACRO_SR_PRED_INTRO :args [ (= let85 let64) ]}", comment = "{\"subProofQty\":1}" ];
	65 -> 50;
	66 [ label = "{(= let84 let67)|MACRO_SR_PRED_INTRO :args [ (= let84 let67) ]}", comment = "{\"subProofQty\":1}" ];
	66 -> 50;
	67 [ label = "{(= let83 let71)|MACRO_SR_PRED_INTRO :args [ (= let83 let71) ]}", comment = "{\"subProofQty\":1}" ];
	67 -> 50;
	68 [ label = "{(= let78 let78)|REFL}", comment = "{\"subProofQty\":1}" ];
	68 -> 50;
	69 [ label = "{(= let82 let29)|MACRO_SR_PRED_INTRO :args [ (= let82 let29) ]}", comment = "{\"subProofQty\":1}" ];
	69 -> 50;
	50 -> 3;
	3 -> 2;
	2 -> 1;
	70 [ label = "{let75|AND_ELIM :args [ 1 ]}", comment = "{\"subProofQty\":6}" ];
	71 [ label = "{let76|EQ_RESOLVE}", comment = "{\"subProofQty\":5}" ];
	72 [ label = "{let1|ASSUME}", comment = "{\"subProofQty\":1}" ];
	72 -> 71;
	73 [ label = "{(= let1 let76)|TRANS}", comment = "{\"subProofQty\":3}" ];
	74 [ label = "{(= let1 let77)|MACRO_SR_EQ_INTRO :args [ let1, 7, 12 ]}", comment = "{\"subProofQty\":1}" ];
	74 -> 73;
	75 [ label = "{(= let77 let76)|PREPROCESS :args [ (= let77 let76) ]}", comment = "{\"subProofQty\":1}" ];
	75 -> 73;
	73 -> 71;
	71 -> 70;
	70 -> 1;
	76 [ label = "{let72|AND_ELIM :args [ 0 ]}", comment = "{\"subProofQty\":4}" ];
	77 [ label = "{let73|EQ_RESOLVE}", comment = "{\"subProofQty\":3}" ];
	78 [ label = "{let2|ASSUME}", comment = "{\"subProofQty\":1}" ];
	78 -> 77;
	79 [ label = "{(= let2 let73)|PREPROCESS :args [ (= let2 let73) ]}", comment = "{\"subProofQty\":1}" ];
	79 -> 77;
	77 -> 76;
	76 -> 1;
	80 [ label = "{let68|AND_ELIM :args [ 0 ]}", comment = "{\"subProofQty\":4}" ];
	81 [ label = "{let69|EQ_RESOLVE}", comment = "{\"subProofQty\":3}" ];
	82 [ label = "{let3|ASSUME}", comment = "{\"subProofQty\":1}" ];
	82 -> 81;
	83 [ label = "{(= let3 let69)|PREPROCESS :args [ (= let3 let69) ]}", comment = "{\"subProofQty\":1}" ];
	83 -> 81;
	81 -> 80;
	80 -> 1;
	84 [ label = "{let65|AND_ELIM :args [ 0 ]}", comment = "{\"subProofQty\":4}" ];
	85 [ label = "{let66|EQ_RESOLVE}", comment = "{\"subProofQty\":3}" ];
	86 [ label = "{let4|ASSUME}", comment = "{\"subProofQty\":1}" ];
	86 -> 85;
	87 [ label = "{(= let4 let66)|PREPROCESS :args [ (= let4 let66) ]}", comment = "{\"subProofQty\":1}" ];
	87 -> 85;
	85 -> 84;
	84 -> 1;
	88 [ label = "{let62|AND_ELIM :args [ 0 ]}", comment = "{\"subProofQty\":4}" ];
	89 [ label = "{let63|EQ_RESOLVE}", comment = "{\"subProofQty\":3}" ];
	90 [ label = "{let5|ASSUME}", comment = "{\"subProofQty\":1}" ];
	90 -> 89;
	91 [ label = "{(= let5 let63)|PREPROCESS :args [ (= let5 let63) ]}", comment = "{\"subProofQty\":1}" ];
	91 -> 89;
	89 -> 88;
	88 -> 1;
	92 [ label = "{let59|AND_ELIM :args [ 0 ]}", comment = "{\"subProofQty\":4}" ];
	93 [ label = "{let60|EQ_RESOLVE}", comment = "{\"subProofQty\":3}" ];
	94 [ label = "{let6|ASSUME}", comment = "{\"subProofQty\":1}" ];
	94 -> 93;
	95 [ label = "{(= let6 let60)|PREPROCESS :args [ (= let6 let60) ]}", comment = "{\"subProofQty\":1}" ];
	95 -> 93;
	93 -> 92;
	92 -> 1;
	96 [ label = "{let56|AND_ELIM :args [ 0 ]}", comment = "{\"subProofQty\":4}" ];
	97 [ label = "{let57|EQ_RESOLVE}", comment = "{\"subProofQty\":3}" ];
	98 [ label = "{let7|ASSUME}", comment = "{\"subProofQty\":1}" ];
	98 -> 97;
	99 [ label = "{(= let7 let57)|PREPROCESS :args [ (= let7 let57) ]}", comment = "{\"subProofQty\":1}" ];
	99 -> 97;
	97 -> 96;
	96 -> 1;
	100 [ label = "{let53|AND_ELIM :args [ 0 ]}", comment = "{\"subProofQty\":4}" ];
	101 [ label = "{let54|EQ_RESOLVE}", comment = "{\"subProofQty\":3}" ];
	102 [ label = "{let8|ASSUME}", comment = "{\"subProofQty\":1}" ];
	102 -> 101;
	103 [ label = "{(= let8 let54)|PREPROCESS :args [ (= let8 let54) ]}", comment = "{\"subProofQty\":1}" ];
	103 -> 101;
	101 -> 100;
	100 -> 1;
	104 [ label = "{let50|AND_ELIM :args [ 0 ]}", comment = "{\"subProofQty\":4}" ];
	105 [ label = "{let51|EQ_RESOLVE}", comment = "{\"subProofQty\":3}" ];
	106 [ label = "{let9|ASSUME}", comment = "{\"subProofQty\":1}" ];
	106 -> 105;
	107 [ label = "{(= let9 let51)|PREPROCESS :args [ (= let9 let51) ]}", comment = "{\"subProofQty\":1}" ];
	107 -> 105;
	105 -> 104;
	104 -> 1;
	108 [ label = "{let47|AND_ELIM :args [ 0 ]}", comment = "{\"subProofQty\":4}" ];
	109 [ label = "{let48|EQ_RESOLVE}", comment = "{\"subProofQty\":3}" ];
	110 [ label = "{let10|ASSUME}", comment = "{\"subProofQty\":1}" ];
	110 -> 109;
	111 [ label = "{(= let10 let48)|PREPROCESS :args [ (= let10 let48) ]}", comment = "{\"subProofQty\":1}" ];
	111 -> 109;
	109 -> 108;
	108 -> 1;
	112 [ label = "{let44|AND_ELIM :args [ 0 ]}", comment = "{\"subProofQty\":4}" ];
	113 [ label = "{let45|EQ_RESOLVE}", comment = "{\"subProofQty\":3}" ];
	114 [ label = "{let11|ASSUME}", comment = "{\"subProofQty\":1}" ];
	114 -> 113;
	115 [ label = "{(= let11 let45)|PREPROCESS :args [ (= let11 let45) ]}", comment = "{\"subProofQty\":1}" ];
	115 -> 113;
	113 -> 112;
	112 -> 1;
	116 [ label = "{let41|AND_ELIM :args [ 0 ]}", comment = "{\"subProofQty\":4}" ];
	117 [ label = "{let42|EQ_RESOLVE}", comment = "{\"subProofQty\":3}" ];
	118 [ label = "{let12|ASSUME}", comment = "{\"subProofQty\":1}" ];
	118 -> 117;
	119 [ label = "{(= let12 let42)|PREPROCESS :args [ (= let12 let42) ]}", comment = "{\"subProofQty\":1}" ];
	119 -> 117;
	117 -> 116;
	116 -> 1;
	120 [ label = "{let38|AND_ELIM :args [ 0 ]}", comment = "{\"subProofQty\":4}" ];
	121 [ label = "{let39|EQ_RESOLVE}", comment = "{\"subProofQty\":3}" ];
	122 [ label = "{let13|ASSUME}", comment = "{\"subProofQty\":1}" ];
	122 -> 121;
	123 [ label = "{(= let13 let39)|PREPROCESS :args [ (= let13 let39) ]}", comment = "{\"subProofQty\":1}" ];
	123 -> 121;
	121 -> 120;
	120 -> 1;
	124 [ label = "{let35|AND_ELIM :args [ 0 ]}", comment = "{\"subProofQty\":4}" ];
	125 [ label = "{let36|EQ_RESOLVE}", comment = "{\"subProofQty\":3}" ];
	126 [ label = "{let14|ASSUME}", comment = "{\"subProofQty\":1}" ];
	126 -> 125;
	127 [ label = "{(= let14 let36)|PREPROCESS :args [ (= let14 let36) ]}", comment = "{\"subProofQty\":1}" ];
	127 -> 125;
	125 -> 124;
	124 -> 1;
	128 [ label = "{let32|AND_ELIM :args [ 0 ]}", comment = "{\"subProofQty\":4}" ];
	129 [ label = "{let33|EQ_RESOLVE}", comment = "{\"subProofQty\":3}" ];
	130 [ label = "{let15|ASSUME}", comment = "{\"subProofQty\":1}" ];
	130 -> 129;
	131 [ label = "{(= let15 let33)|PREPROCESS :args [ (= let15 let33) ]}", comment = "{\"subProofQty\":1}" ];
	131 -> 129;
	129 -> 128;
	128 -> 1;
	132 [ label = "{let30|EQ_RESOLVE}", comment = "{\"subProofQty\":3}" ];
	133 [ label = "{let16|ASSUME}", comment = "{\"subProofQty\":1}" ];
	133 -> 132;
	134 [ label = "{(= let16 let30)|MACRO_SR_EQ_INTRO :args [ let16, 7, 12 ]}", comment = "{\"subProofQty\":1}" ];
	134 -> 132;
	132 -> 1;
	135 [ label = "{let25|AND_ELIM :args [ 1 ]}", comment = "{\"subProofQty\":4}" ];
	136 [ label = "{let26|EQ_RESOLVE}", comment = "{\"subProofQty\":3}" ];
	137 [ label = "{let17|ASSUME}", comment = "{\"subProofQty\":1}" ];
	137 -> 136;
	138 [ label = "{(= let17 let26)|PREPROCESS :args [ (= let17 let26) ]}", comment = "{\"subProofQty\":1}" ];
	138 -> 136;
	136 -> 135;
	135 -> 1;
	139 [ label = "{let23|AND_ELIM :args [ 1 ]}", comment = "{\"subProofQty\":4}" ];
	140 [ label = "{let24|EQ_RESOLVE}", comment = "{\"subProofQty\":3}" ];
	141 [ label = "{let18|ASSUME}", comment = "{\"subProofQty\":1}" ];
	141 -> 140;
	142 [ label = "{(= let18 let24)|PREPROCESS :args [ (= let18 let24) ]}", comment = "{\"subProofQty\":1}" ];
	142 -> 140;
	140 -> 139;
	139 -> 1;
	143 [ label = "{let21|AND_ELIM :args [ 0 ]}", comment = "{\"subProofQty\":4}" ];
	144 [ label = "{let22|EQ_RESOLVE}", comment = "{\"subProofQty\":3}" ];
	145 [ label = "{let19|ASSUME}", comment = "{\"subProofQty\":1}" ];
	145 -> 144;
	146 [ label = "{(= let19 let22)|PREPROCESS :args [ (= let19 let22) ]}", comment = "{\"subProofQty\":1}" ];
	146 -> 144;
	144 -> 143;
	143 -> 1;
	1 -> 0;

}

