/*
 * generated by Xtext
 */
package com.ge.research.osate.oyster.dsl.formatting2;

import com.ge.research.osate.oyster.dsl.oyster.Oyster;
import com.ge.research.osate.oyster.dsl.oyster.OysterContractSubclause;
import com.ge.research.osate.oyster.dsl.oyster.Statement;
import com.ge.research.osate.oyster.dsl.services.OysterGrammarAccess;
import com.google.inject.Inject;
import org.eclipse.xtext.formatting2.IFormattableDocument;
import org.osate.xtext.aadl2.properties.formatting2.PropertiesFormatter;
import com.ge.research.osate.oyster.dsl.oyster.Statements

class OysterFormatter extends PropertiesFormatter {
	
	@Inject extension OysterGrammarAccess

	def dispatch void format(OysterContractSubclause oystercontractsubclause, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		format(oystercontractsubclause.getContract(), document);
	}

	def dispatch void format(Oyster oyster, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		//for (Statements elements : oyster.getElement()) {
			format(oyster.getElement(), document);
		//}
	}
	
	def dispatch void format(Statements oyster, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (Statement element : oyster.getElements()) {
			format(element, document);
		}
	}
	
}
